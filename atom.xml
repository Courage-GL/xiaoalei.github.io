<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>高小胖。🎈的个人博客</title>
  
  <subtitle>一个胖胖的但是很可爱的小哥哥</subtitle>
  <link href="https://courage-gl.github.io/xiaoalei.github.io/atom.xml" rel="self"/>
  
  <link href="https://courage-gl.github.io/xiaoalei.github.io/"/>
  <updated>2022-04-06T04:18:14.427Z</updated>
  <id>https://courage-gl.github.io/xiaoalei.github.io/</id>
  
  <author>
    <name>高小胖。🎈</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2.SIP发送消息流程梳理</title>
    <link href="https://courage-gl.github.io/xiaoalei.github.io/2022/04/02/2-SIP%E5%BF%83%E8%B7%B3%E7%9B%B8%E5%85%B3%E6%95%B4%E7%90%86/"/>
    <id>https://courage-gl.github.io/xiaoalei.github.io/2022/04/02/2-SIP%E5%BF%83%E8%B7%B3%E7%9B%B8%E5%85%B3%E6%95%B4%E7%90%86/</id>
    <published>2022-04-02T09:54:00.000Z</published>
    <updated>2022-04-06T04:18:14.427Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-snedMsg"><a href="#1-snedMsg" class="headerlink" title="1.snedMsg"></a>1.snedMsg</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> target      the receiver 接收者</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> textContent the message content 消息内容</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> type        the message mimeType &#123;<span class="doctag">@link</span> SipMessage#MESSAGE_TYPE_TEXT&#125; etc 消息类型</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> filePath    the path of the file which will be post to the remote  消息路径</span></span><br><span class="line"><span class="comment">  *                    server</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> data        the associated data to the message,actually only use for type audio,means the 消息大小</span></span><br><span class="line"><span class="comment">  *                    length of the audio</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMessage</span><span class="params">(String target, String textContent, String type,</span></span><br><span class="line"><span class="params">                         <span class="keyword">final</span> String filePath,</span></span><br><span class="line"><span class="params">                         <span class="keyword">final</span> <span class="type">int</span> data)</span> &#123;</span><br><span class="line">     LogUtil.log(<span class="string">&quot;发送文字消息&quot;</span>, target, textContent, type, filePath, data);</span><br><span class="line">     <span class="keyword">if</span> (checkDebugMode(textContent)) &#123;</span><br><span class="line">         <span class="keyword">return</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     textContent = TextUtils.isEmpty(textContent) ? <span class="string">&quot;&quot;</span> : textContent;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="type">String</span> <span class="variable">msgType</span> <span class="operator">=</span> getMessageType(type);</span><br><span class="line">     <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_MSG_STATUS.equals(msgType)) &#123;</span><br><span class="line">         <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line">         <span class="type">StatusMsgBean</span> <span class="variable">statusMsgBean</span> <span class="operator">=</span> gson.fromJson(textContent, StatusMsgBean.class);</span><br><span class="line">         <span class="keyword">if</span> (!statusMsgBean.getMsgType().equals(<span class="string">&quot;SMS&quot;</span>)) &#123;</span><br><span class="line">             target = userID;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (msgType.equals(SipMessage.MESSAGE_TYPE_MSG_DELETE)) &#123;</span><br><span class="line">         target = userID;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     mActionBar.setVisibility(View.VISIBLE);</span><br><span class="line">     <span class="keyword">if</span> (mMessageInputFragment != <span class="literal">null</span>) &#123;</span><br><span class="line">         mMessageInputFragment.hideInputView(View.VISIBLE);</span><br><span class="line">     &#125;</span><br><span class="line"><span class="comment">// 友盟统计消息发送的类型</span></span><br><span class="line">     umengStatistics(msgType);</span><br><span class="line"><span class="comment">//调用广播来发送消息</span></span><br><span class="line">     HttpMessageUtils.sendMessageBroadcast(getActivity(), textContent,</span><br><span class="line">             TextUtils.isEmpty(target) ? remoteFullFrom : target, msgType, filePath, data);</span><br><span class="line">     <span class="comment">// 清楚输入框的内容</span></span><br><span class="line">     clearEditText(msgType);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="2-sendMessageBroadcast"><a href="#2-sendMessageBroadcast" class="headerlink" title="2.sendMessageBroadcast"></a>2.sendMessageBroadcast</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 发送消息</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> context 上下文对象</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> textContent 消息内容</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> remoteFullFrom 接收者</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> msgType 消息类型</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> filePath 消息路径</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> data 消息大小</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sendMessageBroadcast</span><span class="params">(Context context, String textContent,</span></span><br><span class="line"><span class="params">                                           String remoteFullFrom,</span></span><br><span class="line"><span class="params">                                           String msgType, String filePath, <span class="type">int</span> data)</span> &#123;</span><br><span class="line"></span><br><span class="line">       <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(SipManager.ACTION_SEND_MESSAGE);</span><br><span class="line">       intent.putExtra(MessageFragment.BroadcastBundleKeys.SEND_MSG_TXT_CONTENT, textContent);</span><br><span class="line">       intent.putExtra(MessageFragment.BroadcastBundleKeys.SEND_MSG_REMOTE_FULL_FROM,</span><br><span class="line">               remoteFullFrom);</span><br><span class="line">       intent.putExtra(MessageFragment.BroadcastBundleKeys.SEND_MSG_TYPE, msgType);</span><br><span class="line">       intent.putExtra(MessageFragment.BroadcastBundleKeys.SEND_MSG_FILE_PATH, filePath);</span><br><span class="line">       intent.putExtra(MessageFragment.BroadcastBundleKeys.SEND_MSG_DATA, data);</span><br><span class="line"></span><br><span class="line">       intent.putExtra(MessageFragment.BroadcastBundleKeys.SEND_MSG_TIMESTAMP,</span><br><span class="line">               System.currentTimeMillis());</span><br><span class="line"><span class="comment">//      跳转到SipServer</span></span><br><span class="line">       context.sendBroadcast(intent);</span><br><span class="line"><span class="comment">//       静态dumpstack()方法提供一个new exception (&quot;stack trace&quot;).printstacktrace ()的封装，打印一个追踪当前线程的堆栈</span></span><br><span class="line"><span class="comment">//       Thread.dumpStack();</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h1 id="3-SipManager-ACTION-SEND-MESSAGE广播监听"><a href="#3-SipManager-ACTION-SEND-MESSAGE广播监听" class="headerlink" title="3.SipManager.ACTION_SEND_MESSAGE广播监听"></a>3.SipManager.ACTION_SEND_MESSAGE广播监听</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 注册广播监听</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">registerServiceBroadcasts</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (serviceReceiver == <span class="literal">null</span>) &#123;</span><br><span class="line">          <span class="type">IntentFilter</span> <span class="variable">intentfilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntentFilter</span>();</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_DEFER_OUTGOING_UNREGISTER);</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_OUTGOING_UNREGISTER);</span><br><span class="line">          <span class="comment">// added by txp,2013-9-10 register broadcast for unregister all</span></span><br><span class="line">          <span class="comment">// accounts</span></span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_SIP_ACCOUNTS_UNREGISTER);</span><br><span class="line">          <span class="comment">// added by txp,2013-10-16 register broadcast for cancel message</span></span><br><span class="line">          <span class="comment">// notification</span></span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_CANCEL_MESSAGE_NOTIFICATION);</span><br><span class="line">          <span class="comment">// added by zjf 2014-08-19</span></span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_SET_VIEWING_MESSAGE);</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_SEND_MESSAGE);</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_FORWARD_MESSAGE);</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_MAKE_CALL_WITH_OPTIONS);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_SIP_MESSAGE_CONVERSATION_DELETED);</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_SIP_MESSAGE_READ_STATUS_CHANGED);</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_SIP_ACCOUNT_OFF_LINE);</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_SIP_CANCEL_ALL_NOTIFICATIONS);</span><br><span class="line"></span><br><span class="line">          serviceReceiver = <span class="keyword">new</span> <span class="title class_">BroadcastReceiver</span>() &#123;</span><br><span class="line">              <span class="meta">@Override</span></span><br><span class="line">              <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span> &#123;</span><br><span class="line">                  LogUtils.d(<span class="string">&quot;sip service 收到的action: %s&quot;</span>, intent.getAction());</span><br><span class="line">                  LogUtils.v(intent.getExtras());</span><br><span class="line">                  <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">                  <span class="keyword">if</span> (action.equals(SipManager.ACTION_OUTGOING_UNREGISTER)) &#123;</span><br><span class="line">                      unregisterForOutgoing((ComponentName) intent</span><br><span class="line">                              .getParcelableExtra(SipManager.EXTRA_OUTGOING_ACTIVITY));</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action.equals(SipManager.ACTION_DEFER_OUTGOING_UNREGISTER)) &#123;</span><br><span class="line">                      deferUnregisterForOutgoing((ComponentName) intent</span><br><span class="line">                              .getParcelableExtra(SipManager.EXTRA_OUTGOING_ACTIVITY));</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action.equals(SipManager.ACTION_SIP_ACCOUNTS_UNREGISTER)) &#123;</span><br><span class="line">                      <span class="keyword">try</span> &#123;</span><br><span class="line">                          unregisterAllAccounts(<span class="literal">true</span>);</span><br><span class="line">                      &#125; <span class="keyword">catch</span> (SameThreadException e) &#123;</span><br><span class="line">                          Log.e(THIS_FILE, <span class="string">&quot;unregister accounts failed&quot;</span>);</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action.equals(SipManager.ACTION_CANCEL_MESSAGE_NOTIFICATION)) &#123;</span><br><span class="line">                      notificationManager.cancelMessages();</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action.equals(SipManager.ACTION_SIP_MESSAGE_CONVERSATION_DELETED)</span><br><span class="line">                          || action.equals(SipManager.ACTION_SIP_MESSAGE_READ_STATUS_CHANGED)) &#123;</span><br><span class="line">                      notificationManager.buildUnreadMessagesList();</span><br><span class="line"><span class="comment">//                      notificationManager.cancelMessages();</span></span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipManager.ACTION_SET_VIEWING_MESSAGE.equals(action)) &#123;</span><br><span class="line">                      <span class="keyword">if</span> (intent != <span class="literal">null</span>) &#123;</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">from</span> <span class="operator">=</span> intent</span><br><span class="line">                                  .getStringExtra(</span><br><span class="line">                                          MessageFragment.BroadcastBundleKeys.SET_VIEWING_MSG_REMOTE_FROM);</span><br><span class="line">                          notificationManager.setViewingMessageFrom(from);</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipManager.ACTION_SEND_MESSAGE.equals(action)) &#123;</span><br><span class="line">                      <span class="comment">//发送聊天</span></span><br><span class="line">                      LogUtil.printIntent(intent);</span><br><span class="line">                      <span class="keyword">if</span> (intent != <span class="literal">null</span>) &#123;</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_TXT_CONTENT);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">to</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_REMOTE_FULL_FROM);</span><br><span class="line"></span><br><span class="line">                          <span class="type">long</span> <span class="variable">accountId</span> <span class="operator">=</span> SipProfile.INVALID_ID;</span><br><span class="line">                          <span class="type">SipProfile</span> <span class="variable">sipProfile</span> <span class="operator">=</span> SipProfile.getAccountFromCurrentAppContext(SipService.<span class="built_in">this</span>);</span><br><span class="line">                          <span class="keyword">if</span> (sipProfile != <span class="literal">null</span>) &#123;</span><br><span class="line">                              accountId = sipProfile.id;</span><br><span class="line">                          &#125;</span><br><span class="line"></span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">msgType</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_TYPE);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_FILE_PATH);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">int</span> <span class="variable">data</span> <span class="operator">=</span> intent.getIntExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_DATA, <span class="number">0</span>);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">long</span> <span class="variable">timestamp</span> <span class="operator">=</span> intent.getLongExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_TIMESTAMP, -<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                          <span class="keyword">try</span> &#123;</span><br><span class="line">                              <span class="keyword">if</span> (timestamp != lastMsgSendingTimestamp) &#123;</span><br><span class="line">                                  lastMsgSendingTimestamp = timestamp;</span><br><span class="line">                                  binder.sendMessage(content, to, accountId, msgType, filePath,</span><br><span class="line">                                          data);</span><br><span class="line">                                  LogUtils.d(<span class="string">&quot;binder.sendMessage(....)&quot;</span>);</span><br><span class="line">                              &#125;</span><br><span class="line">                          &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                              e.printStackTrace();</span><br><span class="line">                          &#125;</span><br><span class="line">                      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                          Toast.makeText(context, <span class="string">&quot;网络不可用&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipManager.ACTION_FORWARD_MESSAGE.equals(action)) &#123;</span><br><span class="line">                      <span class="keyword">if</span> (intent != <span class="literal">null</span>) &#123;</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_TXT_CONTENT);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">to</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_REMOTE_FULL_FROM);</span><br><span class="line"></span><br><span class="line">                          <span class="type">long</span> <span class="variable">accountId</span> <span class="operator">=</span> SipProfile.INVALID_ID;</span><br><span class="line">                          <span class="type">SipProfile</span> <span class="variable">sipProfile</span> <span class="operator">=</span> SipProfile.getAccountFromCurrentAppContext(SipService.<span class="built_in">this</span>);</span><br><span class="line">                          <span class="keyword">if</span> (sipProfile != <span class="literal">null</span>) &#123;</span><br><span class="line">                              accountId = sipProfile.id;</span><br><span class="line">                          &#125;</span><br><span class="line"></span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">msgType</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_TYPE);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_FILE_PATH);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">int</span> <span class="variable">data</span> <span class="operator">=</span> intent.getIntExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_DATA, <span class="number">0</span>);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">long</span> <span class="variable">timestamp</span> <span class="operator">=</span> intent.getLongExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_TIMESTAMP, -<span class="number">1</span>);</span><br><span class="line"><span class="comment">//                        多余的逻辑 删除掉 解决转发丢消息的问题</span></span><br><span class="line"><span class="comment">//                          if (timestamp != lastMsgSendingTimestamp) &#123;</span></span><br><span class="line"><span class="comment">//                              lastMsgSendingTimestamp = timestamp;</span></span><br><span class="line">                          <span class="keyword">try</span> &#123;</span><br><span class="line">                              binder.forwardMessage(content, to, accountId, msgType, filePath,</span><br><span class="line">                                      data);</span><br><span class="line">                          &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                              e.printStackTrace();</span><br><span class="line">                          &#125;</span><br><span class="line"><span class="comment">//                          &#125;</span></span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipManager.ACTION_MAKE_CALL_WITH_OPTIONS.equals(action)) &#123;</span><br><span class="line">                      <span class="keyword">if</span> (intent != <span class="literal">null</span>) &#123;</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">callee</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.MAKE_CALL_WITH_OPTS_CALLEE);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">long</span> <span class="variable">accountId</span> <span class="operator">=</span> intent</span><br><span class="line">                                  .getLongExtra(</span><br><span class="line">                                          MessageFragment.BroadcastBundleKeys.MAKE_CALL_WITH_OPTS_ACCOUNT_ID,</span><br><span class="line">                                          -<span class="number">1</span>);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">Bundle</span> <span class="variable">options</span> <span class="operator">=</span> intent</span><br><span class="line">                                  .getBundleExtra(</span><br><span class="line">                                          MessageFragment.BroadcastBundleKeys.MAKE_CALL_WITH_OPTS_OPTIONS);</span><br><span class="line">                          <span class="keyword">try</span> &#123;</span><br><span class="line">                              binder.makeCallWithOptions(callee, (<span class="type">int</span>) accountId, options);</span><br><span class="line">                          &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                              e.printStackTrace();</span><br><span class="line">                          &#125;</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipManager.ACTION_SIP_ACCOUNT_OFF_LINE.equals(action)) &#123;</span><br><span class="line">                      LogUtil.log(<span class="string">&quot;sip服务收到离线的广播&quot;</span>);</span><br><span class="line">                      LogUtil.printIntent(intent);</span><br><span class="line">                      <span class="keyword">try</span> &#123;</span><br><span class="line">                          deleteAllAccountsNotUnRegister();</span><br><span class="line">                      &#125; <span class="keyword">catch</span> (SameThreadException e) &#123;</span><br><span class="line">                          Log.e(THIS_FILE, <span class="string">&quot;delete accounts failed&quot;</span>);</span><br><span class="line">                          LogUtil.log(e);</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipManager.ACTION_SIP_CANCEL_ALL_NOTIFICATIONS.equals(action)) &#123;</span><br><span class="line">                      notificationManager.cancelAll();</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">          &#125;;</span><br><span class="line">          registerReceiver(serviceReceiver, intentfilter);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="4-binder-sendMessage-content-to-accountId-msgType-filePath"><a href="#4-binder-sendMessage-content-to-accountId-msgType-filePath" class="headerlink" title="4.binder.sendMessage(content, to, accountId, msgType, filePath,"></a>4.binder.sendMessage(content, to, accountId, msgType, filePath,</h1><pre><code>                                        data);</code></pre><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment">        * SipServer 发送消息</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> message 内容</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> callee 接收者</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> accountId 当前用户Id</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> mimeType 消息类型</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> filePath 消息路径</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> data 消息大小</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@throws</span> RemoteException 可能会报的异常</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMessage</span><span class="params">(<span class="keyword">final</span> String message, <span class="keyword">final</span> String callee, <span class="keyword">final</span> <span class="type">long</span> accountId,</span></span><br><span class="line"><span class="params">                               <span class="keyword">final</span> String mimeType,</span></span><br><span class="line"><span class="params">                               <span class="keyword">final</span> String filePath, <span class="keyword">final</span> <span class="type">int</span> data)</span> <span class="keyword">throws</span> RemoteException &#123;</span><br><span class="line">           LogUtils.i(<span class="string">&quot;%s, %s, %s, %s, %s, %s&quot;</span>, message, callee, accountId, mimeType, filePath, data);</span><br><span class="line">           SipService.<span class="built_in">this</span>.enforceCallingOrSelfPermission(SipManager.PERMISSION_USE_SIP, <span class="literal">null</span>);</span><br><span class="line">           <span class="comment">// We have to ensure service is properly started and not just binded</span></span><br><span class="line">           <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">               <span class="comment">//android8.0以上通过startForegroundService启动service</span></span><br><span class="line">               SipService.<span class="built_in">this</span>.startForegroundService(<span class="keyword">new</span> <span class="title class_">Intent</span>(SipService.<span class="built_in">this</span>, SipService.class));</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               SipService.<span class="built_in">this</span>.startService(<span class="keyword">new</span> <span class="title class_">Intent</span>(SipService.<span class="built_in">this</span>, SipService.class));</span><br><span class="line">           &#125;</span><br><span class="line">           Log.i(THIS_FILE, <span class="string">&quot;try to sms &quot;</span> + callee + <span class="string">&quot; mimeType=&quot;</span> + mimeType);</span><br><span class="line">           <span class="type">int</span> <span class="variable">textSize</span> <span class="operator">=</span> message != <span class="literal">null</span> ? message.getBytes().length : <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_TEXT.equals(mimeType)</span><br><span class="line">                   || (mimeType.equals(SipMessage.MESSAGE_TYPE_RECEIPT) &amp;&amp; textSize &gt;= SipMessage.LONG_TEXT_MIN_BYTES)) &#123;</span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="type">MessageBean</span> <span class="variable">textMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextMessageBean</span>(message, accountId, pjService, callee, SipService.<span class="built_in">this</span>, mimeType);</span><br><span class="line">                       textMessageBean.sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_CANCEL.equals(mimeType)) &#123;</span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="type">MessageBean</span> <span class="variable">customMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextCancelMessageBean</span>(message, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                       customMessageBean.sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_API.equals(mimeType)) &#123;</span><br><span class="line">               <span class="comment">// it is a handler thread</span></span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="type">MessageBean</span> <span class="variable">apiMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ApiMessageBean</span>(message, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                       apiMessageBean.sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_APPROVE.equals(mimeType)) &#123;</span><br><span class="line">               <span class="comment">// it is a handler thread</span></span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       Log.i(THIS_FILE, <span class="string">&quot;approve sms &quot;</span> + callee + <span class="string">&quot; mimeType=&quot;</span> + mimeType);</span><br><span class="line">                       <span class="type">MessageBean</span> <span class="variable">approveMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ApproveMessageBean</span>(message, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                       approveMessageBean.sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_CIRCLE.equals(mimeType)) &#123;</span><br><span class="line">               <span class="comment">// it is a handler thread</span></span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="type">MessageBean</span> <span class="variable">circleMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CircleMessageBean</span>(message, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                       circleMessageBean.sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_LOC.equals(mimeType)) &#123;</span><br><span class="line">               <span class="comment">// it is a handler thread</span></span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="type">MessageBean</span> <span class="variable">locMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LocMessageBean</span>(message, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                       locMessageBean.sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_JOIN_CLASS.equals(mimeType)) &#123;</span><br><span class="line"></span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="keyword">new</span> <span class="title class_">CommonMessageBean</span>.Builder(pjService, callee, accountId, SipService.<span class="built_in">this</span>).setMimeType(mimeType)</span><br><span class="line">                               .setDbMessageBody(message)</span><br><span class="line">                               .setSendMessageBody(message)</span><br><span class="line">                               .setNeedInsertToDb(<span class="literal">false</span>).create().sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_SHARE.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_NET_DISK.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_TRAFFIC.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_EXPRESSION.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_NAME_CARD.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_MSG_STATUS.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_MSG_DELETE.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_METTING.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_TRANSFER.equals(mimeType)</span><br><span class="line">                   || mimeType.equals(SipMessage.MESSAGE_TYPE_RECEIPT)) &#123;</span><br><span class="line">               <span class="comment">// it is a handler thread</span></span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="keyword">new</span> <span class="title class_">CommonMessageBean</span>.Builder(pjService, callee, accountId, SipService.<span class="built_in">this</span>).setMimeType(mimeType)</span><br><span class="line">                               .setDbMessageBody(message)</span><br><span class="line">                               .setSendMessageBody(message)</span><br><span class="line">                               .setNeedInsertToDb(<span class="literal">true</span>).create().sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line"></span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_RECORD.equals(mimeType)) &#123;</span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="type">MessageBean</span> <span class="variable">textMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MergeForwardBean</span>(message, accountId, pjService, callee, SipService.<span class="built_in">this</span>, mimeType);</span><br><span class="line">                       textMessageBean.sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="comment">// every time create a new thread</span></span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">Thread</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                       sipWakeLock.acquire(<span class="built_in">this</span>);</span><br><span class="line">                       <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_IMAGE.equals(mimeType)) &#123;</span><br><span class="line">                           <span class="type">MessageBean</span> <span class="variable">imageMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageMessageBean</span>(message, filePath, data, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                           imageMessageBean.sendMessage();</span><br><span class="line">                       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_AUDIO.equals(mimeType)) &#123;</span><br><span class="line">                           <span class="type">MessageBean</span> <span class="variable">audioMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AudioMessageBean</span>(message, filePath, data, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                           audioMessageBean.sendMessage();</span><br><span class="line">                       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_VEDIO.equals(mimeType)) &#123;</span><br><span class="line">                           <span class="type">MessageBean</span> <span class="variable">videoMessage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">VideoMessageBean</span>(message, filePath, data, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                           videoMessage.sendMessage();</span><br><span class="line">                       &#125;</span><br><span class="line"></span><br><span class="line">                       sipWakeLock.release(<span class="built_in">this</span>);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h1 id="5-判断是什么消息类型-封装不同的消息类型，以图片消息为例-MESSAGE-TYPE-IMAGE"><a href="#5-判断是什么消息类型-封装不同的消息类型，以图片消息为例-MESSAGE-TYPE-IMAGE" class="headerlink" title="5.判断是什么消息类型 封装不同的消息类型，以图片消息为例(MESSAGE_TYPE_IMAGE)"></a>5.判断是什么消息类型 封装不同的消息类型，以图片消息为例(MESSAGE_TYPE_IMAGE)</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_IMAGE.equals(mimeType)) &#123;</span><br><span class="line"> <span class="type">MessageBean</span> <span class="variable">imageMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageMessageBean</span>(message, filePath, data, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">  imageMessageBean.sendMessage();</span><br><span class="line">                       &#125;</span><br></pre></td></tr></table></figure><h1 id="5-1-ImageMessageBean"><a href="#5-1-ImageMessageBean" class="headerlink" title="5.1 ImageMessageBean"></a>5.1 ImageMessageBean</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图片类型消息封装</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> accountId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pjSipService</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> callee</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ImageMessageBean</span><span class="params">(String message, String filePath, <span class="type">int</span> data, <span class="type">long</span> accountId, PjSipService pjSipService, String callee, Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(message, accountId, pjSipService, callee, context);</span><br><span class="line">        <span class="built_in">this</span>.data = data == -<span class="number">100</span> ? <span class="number">0</span> : data;</span><br><span class="line">        <span class="comment">// normal message,just use the text as content</span></span><br><span class="line">        finalMessageContent = strurl.toString();</span><br><span class="line">        dbMessageBody = finalMessageContent;</span><br><span class="line">        <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_IMAGE.equals(getMessageMimeType())) &#123;</span><br><span class="line">            <span class="comment">// get the image file path after zooming 拿到图片大小</span></span><br><span class="line">            finalFilePath = data == -<span class="number">100</span> ? HttpMessageUtils.copyImage(filePath) : HttpMessageUtils.getScaledImagePath(filePath);</span><br><span class="line">            <span class="comment">// move to folder of callee 移动到接收者所在的目录</span></span><br><span class="line">            FileUtils.<span class="type">FileInfo</span> <span class="variable">fileInfo</span> <span class="operator">=</span> FileUtils.getFileInfo(finalFilePath);</span><br><span class="line">            <span class="keyword">if</span> (fileInfo != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">finalFolder</span> <span class="operator">=</span> CustomDistribution.getImageFolder()</span><br><span class="line">                        + File.separator + SipUri</span><br><span class="line">                        .getUserName(callee);</span><br><span class="line">                <span class="type">String</span> <span class="variable">finalFileName</span> <span class="operator">=</span> fileInfo.fileName</span><br><span class="line">                        + SipMessage.MESSAGE_IMAGE_SUFFIX;</span><br><span class="line">                <span class="keyword">if</span> (FileUtils.renameFile(finalFilePath, finalFolder,</span><br><span class="line">                        finalFileName)) &#123;</span><br><span class="line">                    finalFilePath = finalFolder + File.separator</span><br><span class="line">                            + finalFileName;</span><br><span class="line">                    uploadFilePath = HttpMessageUtils</span><br><span class="line">                            .generateTmpPath(SipMessage.SAVE_IMAGE_SUFFIX);</span><br><span class="line">                    FileUtils.copyFile(finalFilePath, uploadFilePath);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="5-2-imageMessageBean-sendMessage"><a href="#5-2-imageMessageBean-sendMessage" class="headerlink" title="5.2 imageMessageBean.sendMessage();"></a>5.2 imageMessageBean.sendMessage();</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 发送消息</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMessage</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="comment">// 生成hashCode</span></span><br><span class="line">      hashCode = getHashCode();</span><br><span class="line">      <span class="keyword">if</span> (toCall != <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="comment">//          拿到要发送的消息</span></span><br><span class="line">          <span class="type">SipMessage</span> <span class="variable">sipMessage</span> <span class="operator">=</span> getSipMessage();</span><br><span class="line">          <span class="keyword">if</span> (needInsertToDb &amp;&amp; !TextUtils.isEmpty(getDbMessageBody())) &#123;</span><br><span class="line"><span class="comment">//              插入到数据库</span></span><br><span class="line">              <span class="type">Uri</span> <span class="variable">uri</span> <span class="operator">=</span> HttpMessageUtils.insertMessage(context, sipMessage, <span class="literal">false</span>);</span><br><span class="line">              prepareForSend(uri);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">              Log.e(THIS_FILE, <span class="string">&quot;abort to send text message to &quot;</span> + toCall + <span class="string">&quot;as flag == false&quot;</span>);</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">              <span class="keyword">if</span> (toCall.isPjsipAccountValid() &amp;&amp; PreferencesWrapper.getInstance(MyApplication.getApplication())</span><br><span class="line">                      .isValidConnectionForIncoming()) &#123;</span><br><span class="line"><span class="comment">//                  发送消息</span></span><br><span class="line">                  pjSipService.sendMessage(toCall, getSendMessageBody(), sipMessage.getX_msgid(), getMessageMimeType(), hashCode);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125; <span class="keyword">catch</span> (SipService.SameThreadException e) &#123;</span><br><span class="line">              e.printStackTrace();</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          Log.e(THIS_FILE, <span class="string">&quot;failed to send text message to &quot;</span> + toCall);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="6-使用SIPServer发送消息-（Send-sms-x2F-message-using-SIP-server）"><a href="#6-使用SIPServer发送消息-（Send-sms-x2F-message-using-SIP-server）" class="headerlink" title="6.使用SIPServer发送消息 （Send sms&#x2F;message using SIP server）"></a>6.使用SIPServer发送消息 （Send sms&#x2F;message using SIP server）</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Send sms/message using SIP server</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// modified by txp,2014-10-28</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">sendMessage</span><span class="params">(ToCall callee, String message, String x_msgid, String mimeType, <span class="type">long</span> currentTimeMillis)</span></span><br><span class="line">            <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">        <span class="keyword">if</span> (!created) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (callee != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> SipMain.sendMessage(callee.getCallee(), x_msgid, mimeType, message, currentTimeMillis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="7-SipMain发送消息"><a href="#7-SipMain发送消息" class="headerlink" title="7.SipMain发送消息"></a>7.SipMain发送消息</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">sendMessage</span><span class="params">(<span class="keyword">final</span> String uri, String x_msgid, <span class="keyword">final</span> String mimeType, <span class="keyword">final</span> String content, <span class="keyword">final</span> <span class="type">long</span> currentTimeMillis)</span> &#123;</span><br><span class="line">       LogUtils.e(<span class="string">&quot;%s,%s,%s,%s&quot;</span>, uri, x_msgid, mimeType, content, currentTimeMillis);</span><br><span class="line">       <span class="keyword">return</span> SipMessenger.getMessenger().sendMessage(uri, x_msgid, mimeType, content, currentTimeMillis);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h1 id="8-SipMessenger发送消息"><a href="#8-SipMessenger发送消息" class="headerlink" title="8.SipMessenger发送消息"></a>8.SipMessenger发送消息</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">sendMessage</span><span class="params">(<span class="keyword">final</span> String uri, <span class="keyword">final</span> String x_msgid, <span class="keyword">final</span> String mimeType, <span class="keyword">final</span> String content, <span class="keyword">final</span> <span class="type">long</span> currentTimeMillis)</span> &#123;</span><br><span class="line"><span class="comment">//       获取当前登录的用户</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">SipAccount</span> <span class="variable">account</span> <span class="operator">=</span> SipAccountMgr.getInstance().getCurrentAccount();</span><br><span class="line">        <span class="keyword">if</span> (account != <span class="literal">null</span> &amp;&amp; SipUri.validSipUri(uri)</span><br><span class="line">                &amp;&amp; !TextUtils.isEmpty(mimeType) &amp;&amp; !TextUtils.isEmpty(content)) &#123;</span><br><span class="line">            SipMain.getInstance().runOnMainThread(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//                    切换到主线程里去发消息</span></span><br><span class="line">                    sendMessage(account, x_msgid, uri, mimeType, content, currentTimeMillis);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            LogUtils.d(<span class="string">&quot;send params not valid. uri:&quot;</span> + uri + <span class="string">&quot; mimeType:&quot;</span> + mimeType + <span class="string">&quot; content:&quot;</span> + content);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="9-真正调用sip发送消息的函数"><a href="#9-真正调用sip发送消息的函数" class="headerlink" title="9. 真正调用sip发送消息的函数"></a>9. 真正调用sip发送消息的函数</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SuppressLint(&quot;HardwareIds&quot;)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">sendMessage</span><span class="params">(SipAccount account, String x_msgid, String sipUri, String mimeType, String content, <span class="type">long</span> currentTimeMillis)</span> &#123;</span><br><span class="line">    <span class="type">Buddy</span> <span class="variable">buddy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Buddy</span>();</span><br><span class="line">    <span class="type">BuddyConfig</span> <span class="variable">buddyConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BuddyConfig</span>();</span><br><span class="line">    <span class="type">SendInstantMessageParam</span> <span class="variable">param</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SendInstantMessageParam</span>();</span><br><span class="line">    content = SipEncryptor.encode(content);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        buddyConfig.setUri(sipUri);</span><br><span class="line">        buddy.create(account, buddyConfig);</span><br><span class="line">        param.setContentType(mimeType);</span><br><span class="line">        param.setContent(content);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_CANCEL.equals(mimeType)) &#123;</span><br><span class="line">            MyApplication.getApplication().addCancelHashcode(currentTimeMillis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//用来唯一标识这条发送的消息</span></span><br><span class="line">        <span class="type">SWIGTYPE_p_void</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SwigtypePVoidWrapper</span>((<span class="type">int</span>) currentTimeMillis, <span class="literal">true</span>);</span><br><span class="line">        param.setUserData(a);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *  2分钟内撤回消息增加</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        param.getTxOption().setMsgBody((<span class="type">int</span>) currentTimeMillis + <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="type">SipTxOption</span> <span class="variable">txOption</span> <span class="operator">=</span> param.getTxOption();</span><br><span class="line">        <span class="type">SipHeaderVector</span> <span class="variable">headerVector</span> <span class="operator">=</span> txOption.getHeaders();</span><br><span class="line">        <span class="type">SipHeader</span> <span class="variable">sipHeader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SipHeader</span>();</span><br><span class="line">        sipHeader.setHName(SipMessage.X_MSGID);</span><br><span class="line">        sipHeader.setHValue(x_msgid);</span><br><span class="line">        headerVector.add(sipHeader);</span><br><span class="line">        txOption.setHeaders(headerVector);</span><br><span class="line">        param.setTxOption(txOption);</span><br><span class="line">        buddy.sendInstantMessage(param);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">        LogUtils.e(<span class="string">&quot;send Message failed.&quot;</span> + e);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        param.delete();</span><br><span class="line">        buddy.delete();</span><br><span class="line">        buddyConfig.delete();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-最底层发送消息的函数"><a href="#10-最底层发送消息的函数" class="headerlink" title="10.最底层发送消息的函数"></a>10.最底层发送消息的函数</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendInstantMessage</span><span class="params">(SendInstantMessageParam prm)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    pjsua2JNI.Buddy_sendInstantMessage(<span class="built_in">this</span>.swigCPtr, <span class="built_in">this</span>, SendInstantMessageParam.getCPtr(prm), prm);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-snedMsg&quot;&gt;&lt;a href=&quot;#1-snedMsg&quot; class=&quot;headerlink&quot; title=&quot;1.snedMsg&quot;&gt;&lt;/a&gt;1.snedMsg&lt;/h1&gt;&lt;p class=&quot;code-caption&quot; data-lang=&quot;java&quot; data</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>1.SIP登录模块整理</title>
    <link href="https://courage-gl.github.io/xiaoalei.github.io/2022/04/02/1.SIP%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E6%95%B4%E7%90%86/"/>
    <id>https://courage-gl.github.io/xiaoalei.github.io/2022/04/02/1.SIP%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E6%95%B4%E7%90%86/</id>
    <published>2022-04-02T09:12:05.000Z</published>
    <updated>2022-04-02T09:53:35.208Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Sip登录相关问题"><a href="#Sip登录相关问题" class="headerlink" title="Sip登录相关问题"></a>Sip登录相关问题</h1><h4 id="1-登录流程"><a href="#1-登录流程" class="headerlink" title="1.登录流程"></a>1.登录流程</h4><p><img src="/xiaoalei.github.io/images/sip_login.png"></p><h4 id="2-登录、注销"><a href="#2-登录、注销" class="headerlink" title="2.登录、注销"></a>2.登录、注销</h4><p><img src="/xiaoalei.github.io/images/login_unlogin1.png"><br><img src="/xiaoalei.github.io/images/login_unlogin2.png"></p><h4 id="3-登录状态"><a href="#3-登录状态" class="headerlink" title="3.登录状态"></a>3.登录状态</h4><p><img src="/xiaoalei.github.io/images/login_status.png"></p><h4 id="4-注销登录"><a href="#4-注销登录" class="headerlink" title="4.注销登录"></a>4.注销登录</h4><p><img src="/xiaoalei.github.io/images/login_unlogin.png"></p><h4 id="5-网络切换"><a href="#5-网络切换" class="headerlink" title="5.网络切换"></a>5.网络切换</h4><p><img src="/xiaoalei.github.io/images/network_change.png"></p><h4 id="6-杀掉后再打开"><a href="#6-杀掉后再打开" class="headerlink" title="6.杀掉后再打开"></a>6.杀掉后再打开</h4><p><img src="/xiaoalei.github.io/images/kill_and_open.png"></p><h4 id="7-放到后台再打开"><a href="#7-放到后台再打开" class="headerlink" title="7.放到后台再打开"></a>7.放到后台再打开</h4><p><img src="/xiaoalei.github.io/images/background_opne.png"></p><h4 id="8-sip心跳机制"><a href="#8-sip心跳机制" class="headerlink" title="8.sip心跳机制"></a>8.sip心跳机制</h4><p><img src="/xiaoalei.github.io/images/sip_beat.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Sip登录相关问题&quot;&gt;&lt;a href=&quot;#Sip登录相关问题&quot; class=&quot;headerlink&quot; title=&quot;Sip登录相关问题&quot;&gt;&lt;/a&gt;Sip登录相关问题&lt;/h1&gt;&lt;h4 id=&quot;1-登录流程&quot;&gt;&lt;a href=&quot;#1-登录流程&quot; class=&quot;head</summary>
      
    
    
    
    
  </entry>
  
</feed>
