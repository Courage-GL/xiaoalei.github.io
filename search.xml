<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>3.SIP登录相关代码梳理</title>
      <link href="/xiaoalei.github.io/2022/04/16/3-SIP%E7%99%BB%E5%BD%95%E7%9B%B8%E5%85%B3%E4%BB%A3%E7%A0%81%E6%A2%B3%E7%90%86/"/>
      <url>/xiaoalei.github.io/2022/04/16/3-SIP%E7%99%BB%E5%BD%95%E7%9B%B8%E5%85%B3%E4%BB%A3%E7%A0%81%E6%A2%B3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="1-输入用户名密码登录"><a href="#1-输入用户名密码登录" class="headerlink" title="1.输入用户名密码登录"></a>1.输入用户名密码登录</h2><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录 </span></span><br><span class="line"><span class="comment">     * 1、拿到输入框输入的用户名 密码</span></span><br><span class="line"><span class="comment">     * 2.密码使用new SMSM3().toMD5加密</span></span><br><span class="line"><span class="comment">     * 3.发送SipManager.ACTION_SIP_ACCOUNT_CHANGED广播</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">        <span class="type">Intent</span> <span class="variable">publishIntent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(SipManager.ACTION_SIP_ACCOUNT_CHANGED);</span><br><span class="line">        <span class="comment">// publishIntent.putExtra(Filter.FIELD_ACCOUNT, account);</span></span><br><span class="line">        publishIntent.putExtra(SipProfile.FIELD_USERNAME, account.username);</span><br><span class="line">        <span class="comment">//the password use md5 value</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">passMd5</span> <span class="operator">=</span> MD5.md5PassWord(account.data);</span><br><span class="line">        <span class="comment">//现在是测试,用sm3加密</span></span><br><span class="line"><span class="comment">//        if (BuildConfig.DEBUG)</span></span><br><span class="line">        passMd5 = <span class="keyword">new</span> <span class="title class_">SMSM3</span>().toMD5(account.data);</span><br><span class="line">        publishIntent.putExtra(SipProfile.FIELD_DATA, passMd5);</span><br><span class="line">        publishIntent.putExtra(<span class="string">&quot;token&quot;</span>, loginToken);</span><br><span class="line">        mPrefsWrapper.setPreferenceStringValue(PreferencesWrapper.LAST_LOGIN_USERNAME,</span><br><span class="line">                account.username);</span><br><span class="line">        sendBroadcast(publishIntent);</span><br></pre></td></tr></table></figure><h3 id="1-1-SipManager-ACTION-SIP-ACCOUNT-CHANGED广播"><a href="#1-1-SipManager-ACTION-SIP-ACCOUNT-CHANGED广播" class="headerlink" title="1.1 SipManager.ACTION_SIP_ACCOUNT_CHANGED广播"></a>1.1 SipManager.ACTION_SIP_ACCOUNT_CHANGED广播</h3><p class="code-caption" data-lang="" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (action.equals(SipManager.ACTION_SIP_ACCOUNT_CHANGED)) &#123;</span><br><span class="line">            <span class="comment">// 为统计未读消息做好准备</span></span><br><span class="line">            service.notificationManager.build<span class="constructor">UnreadMessagesList()</span>;</span><br><span class="line">            <span class="comment">//拿到用户名</span></span><br><span class="line">            final String username = intent.get<span class="constructor">StringExtra(SipProfile.FIELD_USERNAME)</span>;</span><br><span class="line">            <span class="comment">//拿到密码</span></span><br><span class="line">            final String password = intent.get<span class="constructor">StringExtra(SipProfile.FIELD_DATA)</span>;</span><br><span class="line">            <span class="comment">//拿到 token（新增）</span></span><br><span class="line">            final String password = intent.get<span class="constructor">StringExtra(SipProfile.FIELD_DATA)</span>;</span><br><span class="line">            final String token = intent.get<span class="constructor">StringExtra(SipProfile.FIELD_TOKEN)</span>;</span><br><span class="line"> <span class="comment">// 通过Nv抽象类创建account </span></span><br><span class="line">            SipProfile account = null;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="module-access"><span class="module"><span class="identifier">TextUtils</span>.</span></span>is<span class="constructor">Empty(<span class="params">username</span>)</span><span class="operator"> &amp;&amp; </span>!<span class="module-access"><span class="module"><span class="identifier">TextUtils</span>.</span></span>is<span class="constructor">Empty(<span class="params">password</span>)</span>) &#123;</span><br><span class="line">                final SipProfile emptyAccount = <span class="keyword">new</span> <span class="constructor">SipProfile()</span>;</span><br><span class="line">                account = <span class="keyword">new</span> <span class="constructor">Nv()</span> &#123;</span><br><span class="line"></span><br><span class="line">                    @Override</span><br><span class="line">                    protected String get<span class="constructor">DisplayName()</span> &#123;</span><br><span class="line">                        return (!<span class="module-access"><span class="module"><span class="identifier">TextUtils</span>.</span></span>is<span class="constructor">Empty(<span class="params">emptyAccount</span>.<span class="params">display_name</span>)</span>) ? emptyAccount.display_name</span><br><span class="line">                                : service.get<span class="constructor">Resources()</span>.get<span class="constructor">String(R.<span class="params">string</span>.<span class="params">app_name</span>)</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="comment">// 给account username赋值</span></span><br><span class="line">                    @Override</span><br><span class="line">                    @Override</span><br><span class="line">                    protected String get<span class="constructor">UserName()</span> &#123;</span><br><span class="line">                        return username;</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="comment">// 给account Password赋值</span></span><br><span class="line">                    @Override</span><br><span class="line">                    protected String get<span class="constructor">Password()</span> &#123;</span><br><span class="line">                        return password;</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="comment">// 给account token赋值</span></span><br><span class="line">                    @Override</span><br><span class="line">                    protected String get<span class="constructor">Token()</span> &#123;</span><br><span class="line">                        return token;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    @Override</span><br><span class="line">                    protected String get<span class="constructor">ServerName()</span> &#123;</span><br><span class="line">                        return <span class="module-access"><span class="module"><span class="identifier">CustomDistribution</span>.</span></span>get<span class="constructor">DefaultAccountServer()</span>;</span><br><span class="line"><span class="comment">//                        return &quot;s&quot;+ DomainPreference.getBaseUrl();</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;.build<span class="constructor">Account(<span class="params">emptyAccount</span>)</span>;</span><br><span class="line">                account.id = SipProfile.DEFAULT_ACCOUNT_ID;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">LogUtils</span>.</span></span>w(account);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 默认 accountId = SipProfile.INVALID_ID 如果不等于说明本地数据有值 从本地数据取account</span></span><br><span class="line">     </span><br><span class="line">            <span class="keyword">if</span> (accountId != SipProfile.INVALID_ID) &#123;</span><br><span class="line">                account = service.get<span class="constructor">Account(<span class="params">accountId</span>)</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 开始登录</span></span><br><span class="line">            <span class="keyword">if</span> (account != null) &#123;</span><br><span class="line">                changeAccount = <span class="literal">true</span>;</span><br><span class="line">                service.set<span class="constructor">AccountRegistration(<span class="params">account</span>, <span class="params">account</span>.<span class="params">active</span> ? 1 : 0, <span class="params">true</span>)</span>;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-service-setAccountRegistration-account-account-active-1-0-true"><a href="#1-2-service-setAccountRegistration-account-account-active-1-0-true" class="headerlink" title="1.2 service.setAccountRegistration(account, account.active ? 1 : 0, true);"></a>1.2 service.setAccountRegistration(account, account.active ? 1 : 0, true);</h3><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 登录或者注销</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> account 账号信息</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> renew 1或者0 1是登录 0是注销</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> forceReAdd 是否强制</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> SameThreadException</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">setAccountRegistration</span><span class="params">(SipProfile account, <span class="type">int</span> renew, <span class="type">boolean</span> forceReAdd)</span></span><br><span class="line">           <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">       LogUtils.e(<span class="string">&quot;账号注册或者注销: %s , %d ,%s&quot;</span>, account.username, renew, forceReAdd);</span><br><span class="line">       <span class="type">boolean</span> <span class="variable">status</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">       <span class="keyword">if</span> (pjService != <span class="literal">null</span>) &#123;</span><br><span class="line">           status = pjService.setAccountRegistration(account, renew, forceReAdd);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> status;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="1-3pjService-setAccountRegistration-account-renew-forceReAdd"><a href="#1-3pjService-setAccountRegistration-account-renew-forceReAdd" class="headerlink" title="1.3pjService.setAccountRegistration(account, renew, forceReAdd);"></a>1.3pjService.setAccountRegistration(account, renew, forceReAdd);</h3><p class="code-caption" data-lang="" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Change account registration / adding state</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> account    The account to modify registration</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> renew      if 0 we ask for deletion of this account; if 1 we ask for</span></span><br><span class="line"><span class="comment">    *                   registration of this account (and add if necessary)</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> forceReAdd if true, we will first remove the account and then</span></span><br><span class="line"><span class="comment">    *                   re-add it</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> true if the operation get completed without problem</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> SameThreadException</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">setAccountRegistration</span><span class="params">(SipProfile account, <span class="type">int</span> renew, <span class="type">boolean</span> forceReAdd)</span></span><br><span class="line">           <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">status</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"><span class="comment">//       if (!created || account == null) &#123;</span></span><br><span class="line"><span class="comment">//           LogUtils.e(&quot;PJSIP is not started here, nothing can be done&quot;);</span></span><br><span class="line"><span class="comment">//           return false;</span></span><br><span class="line"><span class="comment">//       &#125;</span></span><br><span class="line">       <span class="keyword">if</span> (account.id == SipProfile.INVALID_ID) &#123;</span><br><span class="line">           LogUtils.e(<span class="string">&quot;Trying to set registration on a deleted account&quot;</span>);</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="type">SipProfileState</span> <span class="variable">profileState</span> <span class="operator">=</span> getProfileState(account);</span><br><span class="line">       LogUtils.e(<span class="string">&quot;账号注册或者登陆服务: %s&quot;</span>, profileState);</span><br><span class="line">       <span class="comment">// If local account -- Ensure we are not deleting, because this would be</span></span><br><span class="line">       <span class="comment">// invalid</span></span><br><span class="line">       <span class="keyword">if</span> (profileState.getWizard().equalsIgnoreCase(WizardUtils.LOCAL_WIZARD_TAG)) &#123;</span><br><span class="line">           <span class="keyword">if</span> (renew == <span class="number">0</span>) &#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="type">SipAccountMgr</span> <span class="variable">accountMgr</span> <span class="operator">=</span> SipAccountMgr.getInstance();</span><br><span class="line">       <span class="keyword">final</span> <span class="type">int</span> <span class="variable">accountId</span> <span class="operator">=</span> profileState.getPjsuaId();</span><br><span class="line"></span><br><span class="line">       LogUtils.e(<span class="string">&quot;setAccountRegistration accountId:&quot;</span> + accountId);</span><br><span class="line"></span><br><span class="line">       <span class="comment">// In case of already added, we have to act finely</span></span><br><span class="line">       <span class="comment">// If it&#x27;s local we can just consider that we have to re-add account</span></span><br><span class="line">       <span class="comment">// since it will actually just touch the account with a modify</span></span><br><span class="line">       <span class="keyword">if</span> (profileState.isAddedToStack()</span><br><span class="line">               &amp;&amp; !profileState.getWizard().equalsIgnoreCase(WizardUtils.LOCAL_WIZARD_TAG)) &#123;</span><br><span class="line">           LogUtil.log(<span class="string">&quot;aaaaaaaaaaaaaaaaaaaaaa&quot;</span>);</span><br><span class="line">           <span class="comment">// The account is already there in accounts list</span></span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               service.getContentResolver().delete(</span><br><span class="line">                       ContentUris.withAppendedId(SipProfile.ACCOUNT_STATUS_URI, account.id), <span class="literal">null</span>,</span><br><span class="line">                       <span class="literal">null</span>);</span><br><span class="line">           &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">               Log.e(THIS_FILE, <span class="string">&quot;&quot;</span>, e);</span><br><span class="line">           &#125;</span><br><span class="line">           LogUtils.w(<span class="string">&quot;Account already added to stack, remove and re-load or delete&quot;</span>);</span><br><span class="line">           <span class="keyword">if</span> (renew == <span class="number">1</span>) &#123;</span><br><span class="line">               <span class="keyword">if</span> (forceReAdd) &#123;</span><br><span class="line">                   <span class="comment">//status = pjsua.acc_del(profileState.getPjsuaId());</span></span><br><span class="line">                   status = accountMgr.delAccount(accountId) ? <span class="number">0</span> : -<span class="number">1</span>;</span><br><span class="line">                   addAccount(account);</span><br><span class="line">               &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                   accountMgr.setOnlineStatus(accountId, <span class="number">1</span> == getOnlineForStatus(service.getPresence()));</span><br><span class="line">                   status = accountMgr.setRegistration(accountId, renew == <span class="number">1</span>) ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line">                   <span class="comment">/*pjsua.acc_set_online_status(profileState.getPjsuaId(),</span></span><br><span class="line"><span class="comment">                           getOnlineForStatus(service.getPresence()));*/</span></span><br><span class="line">                   <span class="comment">//status = pjsua.acc_set_registration(profileState.getPjsuaId(), renew);</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="comment">// if(status == pjsuaConstants.PJ_SUCCESS &amp;&amp; renew == 0) &#123;</span></span><br><span class="line">               LogUtils.w(<span class="string">&quot;Delete account !!&quot;</span>);</span><br><span class="line">               <span class="comment">//status = pjsua.acc_del(profileState.getPjsuaId());</span></span><br><span class="line">               status = accountMgr.delAccount(accountId) ? <span class="number">0</span> : -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           LogUtil.log(<span class="string">&quot;bbbbbbbbbbbbbbbbbbbbbbb&quot;</span>);</span><br><span class="line">           <span class="keyword">if</span> (renew == <span class="number">1</span>) &#123;</span><br><span class="line">               addAccount(account);</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               LogUtils.e(<span class="string">&quot;Ask to unregister an unexisting account !! %s&quot;</span> + account.id);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// PJ_SUCCESS = 0</span></span><br><span class="line">       <span class="type">return</span> <span class="variable">status</span> <span class="operator">=</span>= <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 将所有的账号的数据库存储的状态标识为离线，网络断开时UI据此显示状态</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAccountStatusOffline</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">ContentValues</span> <span class="variable">cv</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line"></span><br><span class="line">       <span class="comment">// Should be fine : status code are coherent with RFC</span></span><br><span class="line">       <span class="comment">// status codes</span></span><br><span class="line">       <span class="comment">//标识为网络断开</span></span><br><span class="line">       cv.put(SipProfileState.STATUS_CODE, SipCallSession.StatusCode.PJSIP_SC_BAD_GATEWAY);</span><br><span class="line"></span><br><span class="line">       cv.put(SipProfileState.STATUS_TEXT, <span class="string">&quot;&quot;</span>);</span><br><span class="line">       cv.put(SipProfileState.EXPIRES, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="type">Cursor</span> <span class="variable">c</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           c = service.getContentResolver().query(SipProfile.ACCOUNT_URI,</span><br><span class="line">                   DBProvider.ACCOUNT_FULL_PROJECTION, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">           <span class="keyword">if</span> (c != <span class="literal">null</span> &amp;&amp; c.moveToFirst()) &#123;</span><br><span class="line">               <span class="keyword">do</span> &#123;</span><br><span class="line">                   <span class="type">SipProfile</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SipProfile</span>(c);</span><br><span class="line">                   service.getContentResolver().update(ContentUris.withAppendedId(SipProfile.ACCOUNT_STATUS_URI,</span><br><span class="line">                           account.id), cv, <span class="literal">null</span>,</span><br><span class="line">                           <span class="literal">null</span>);</span><br><span class="line">               &#125; <span class="keyword">while</span> (c.moveToNext());</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           LogUtils.e(<span class="string">&quot;Error on looping over sip profiles&quot;</span>, e);</span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">           <span class="keyword">if</span> (c != <span class="literal">null</span>) &#123;</span><br><span class="line">               c.close();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="1-4-addAccount-account"><a href="#1-4-addAccount-account" class="headerlink" title="1.4 addAccount(account);"></a>1.4 addAccount(account);</h3><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">addAccount</span><span class="params">(SipProfile profile)</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">        <span class="keyword">if</span> (profile != <span class="literal">null</span>)</span><br><span class="line">            LogUtil.log(<span class="string">&quot;添加账号&quot;</span>, profile.username, profile.display_name);</span><br><span class="line">        <span class="type">int</span> <span class="variable">status</span> <span class="operator">=</span> pjsuaConstants.PJ_FALSE;</span><br><span class="line">        <span class="keyword">if</span> (!created) &#123;</span><br><span class="line">            Log.e(THIS_FILE, <span class="string">&quot;PJSIP is not started here, nothing can be done&quot;</span>);</span><br><span class="line">            <span class="type">return</span> <span class="variable">status</span> <span class="operator">=</span>= pjsuaConstants.PJ_SUCCESS;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//    </span></span><br><span class="line"></span><br><span class="line">        <span class="type">SipAccountMgr</span> <span class="variable">accountMgr</span> <span class="operator">=</span> SipAccountMgr.getInstance();</span><br><span class="line">        <span class="type">SipProfileState</span> <span class="variable">currentAccountStatus</span> <span class="operator">=</span> getProfileState(profile);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (currentAccountStatus.isAddedToStack()) &#123;</span><br><span class="line">            <span class="comment">//如果登陆过,从数据库中查询不到</span></span><br><span class="line">            beforeAccountRegistration(currentAccountStatus.getPjsuaId(), profile);</span><br><span class="line">            <span class="type">ContentValues</span> <span class="variable">cv</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">            cv.put(SipProfileState.ADDED_STATUS, status);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                service.getContentResolver().update(</span><br><span class="line">                        ContentUris.withAppendedId(SipProfile.ACCOUNT_STATUS_ID_URI_BASE, profile.id),</span><br><span class="line">                        cv, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                Log.e(THIS_FILE, <span class="string">&quot;&quot;</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">assert</span> profile != <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (!profile.wizard.equalsIgnoreCase(WizardUtils.LOCAL_WIZARD_TAG)) &#123;</span><br><span class="line">                <span class="comment">// Re register</span></span><br><span class="line">                <span class="keyword">if</span> (status == pjsuaConstants.PJ_SUCCESS) &#123;</span><br><span class="line">                    status = accountMgr.setRegistration(currentAccountStatus.getPjsuaId(), <span class="literal">true</span>) ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line">                    Log.e(<span class="string">&quot;accountMgr.setRegistration&quot;</span>, <span class="string">&quot;accountMgr.setRegistration&quot;</span>);</span><br><span class="line">                    <span class="comment">//status = pjsua.acc_set_registration(currentAccountStatus.getPjsuaId(), 1);</span></span><br><span class="line">                    <span class="keyword">if</span> (status == pjsuaConstants.PJ_SUCCESS) &#123;</span><br><span class="line">                        <span class="comment">//pjsua.acc_set_online_status(currentAccountStatus.getPjsuaId(), 1);</span></span><br><span class="line">                        accountMgr.setOnlineStatus(currentAccountStatus.getPjsuaId(), <span class="literal">true</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">SipAccount</span> <span class="variable">sipAccount</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">int</span>[] accId = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (profile.wizard.equalsIgnoreCase(WizardUtils.LOCAL_WIZARD_TAG)) &#123;</span><br><span class="line">            </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 登录调用的方法</span></span><br><span class="line">                   <span class="keyword">if</span> ((sipAccount = accountMgr.addAccount(profile)) != <span class="literal">null</span>) &#123;</span><br><span class="line">                        status = pjsuaConstants.PJ_SUCCESS;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//如果首次登陆成功，会插入到数据库的,</span></span><br><span class="line">            <span class="keyword">if</span> (status == pjsuaConstants.PJ_SUCCESS) &#123;</span><br><span class="line">                <span class="type">SipProfileState</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SipProfileState</span>(profile);</span><br><span class="line">                ps.setAddedStatus(status);</span><br><span class="line">                accId[<span class="number">0</span>] = sipAccount.getId();</span><br><span class="line">                ps.setPjsuaId(accId[<span class="number">0</span>]);</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    service.getContentResolver().insert(</span><br><span class="line">                            ContentUris.withAppendedId(SipProfile.ACCOUNT_STATUS_ID_URI_BASE,</span><br><span class="line">                                    profile.id), ps.getAsContentValue());</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//注册成功，修改MyApplication的账号信息</span></span><br><span class="line">                    <span class="type">MyApplication</span> <span class="variable">app</span> <span class="operator">=</span> (MyApplication) service.getApplicationContext();</span><br><span class="line">                    app.changeCurrentSignedAccount(profile);</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    Log.e(THIS_FILE, <span class="string">&quot;&quot;</span>, e);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">return</span> <span class="variable">status</span> <span class="operator">=</span>= pjsuaConstants.PJ_SUCCESS;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="1-5-accountMgr-addAccount-profile"><a href="#1-5-accountMgr-addAccount-profile" class="headerlink" title="1.5 accountMgr.addAccount(profile)"></a>1.5 accountMgr.addAccount(profile)</h3><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> SipAccount <span class="title function_">addAccount</span><span class="params">(SipProfile sipProfile)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="keyword">if</span> (!SipMain.getInstance().hasInitialized()) &#123;</span><br><span class="line">        LogUtil.log(<span class="string">&quot;addAccount sip stack not ready&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">SipAccountConfig</span> <span class="variable">accountConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SipAccountConfig</span>();</span><br><span class="line">    <span class="comment">//account config</span></span><br><span class="line">    <span class="type">AccountConfig</span> <span class="variable">config</span> <span class="operator">=</span> accountConfig.accCfg;</span><br><span class="line">    config.setIdUri(SipUri.getDefaultSipUri(sipProfile.getUserName()));</span><br><span class="line">    config.getRegConfig().setRegistrarUri(sipProfile.reg_uri);</span><br><span class="line">    LogUtil.log(<span class="string">&quot;sipProfile.reg_uri==&quot;</span> + sipProfile.reg_uri);</span><br><span class="line"></span><br><span class="line">    <span class="type">SipHeaderVector</span> <span class="variable">headerVector</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SipHeaderVector</span>();</span><br><span class="line">    <span class="type">SipHeader</span> <span class="variable">sipHeader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SipHeader</span>();</span><br><span class="line">    sipHeader.setHName(<span class="string">&quot;Client-ID&quot;</span>);</span><br><span class="line">    sipHeader.setHValue(DeviceIdFactory.getInstance(MyApplication.getApplication()).getDeviceUuid() + <span class="string">&quot;-com-chinaums-umschat2&quot;</span>);</span><br><span class="line">    <span class="type">SipHeader</span> <span class="variable">sipHeader1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SipHeader</span>();</span><br><span class="line">    sipHeader1.setHName(<span class="string">&quot;Platform&quot;</span>);</span><br><span class="line">    sipHeader1.setHValue(<span class="string">&quot;Android&quot;</span>);</span><br><span class="line">    <span class="type">SipHeader</span> <span class="variable">sipHeader2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SipHeader</span>();</span><br><span class="line">    sipHeader2.setHName(<span class="string">&quot;UAVersion&quot;</span>);</span><br><span class="line">    sipHeader2.setHValue(String.valueOf(SettingsUtils.getAppVersionCode(MyApplication.getApplication())));</span><br><span class="line">    <span class="type">SipHeader</span> <span class="variable">sipHeader3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SipHeader</span>();</span><br><span class="line">    sipHeader3.setHName(<span class="string">&quot;deviceId&quot;</span>);</span><br><span class="line">    sipHeader3.setHValue(SettingsUtils.getAndroidId(MyApplication.getApplication()));</span><br><span class="line">    headerVector.add(sipHeader);</span><br><span class="line">    headerVector.add(sipHeader1);</span><br><span class="line">    headerVector.add(sipHeader2);</span><br><span class="line">    headerVector.add(sipHeader3);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> != sipProfile.getToken()) &#123;</span><br><span class="line">        token = sipProfile.getToken();</span><br><span class="line">        addTokenHeader(token,headerVector);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!SharedPreferencesUtil.getString(MyApplication.getApplication(), <span class="string">&quot;token&quot;</span>, <span class="string">&quot;&quot;</span>).isEmpty()) &#123;</span><br><span class="line">        token = SharedPreferencesUtil.getString(MyApplication.getApplication(), <span class="string">&quot;token&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        addTokenHeader(token,headerVector);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        token = sipProfile.getPassword();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    token = sipProfile.getPassword();</span></span><br><span class="line">    config.getRegConfig().setHeaders(headerVector);</span><br><span class="line">    <span class="type">AuthCredInfo</span> <span class="variable">authCredInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AuthCredInfo</span>(sipProfile.scheme, sipProfile.realm, sipProfile.getUserName(), sipProfile.datatype, token);</span><br><span class="line"><span class="comment">//   Log.d(&quot;CLIENT-ID&quot;,DeviceIdFactory.getInstance(MyApplication.getApplication()).getDeviceUuid()+sipProfile.username);</span></span><br><span class="line">    <span class="comment">//nat config</span></span><br><span class="line">    config.getNatConfig().setContactRewriteUse(sipProfile.allow_contact_rewrite ? pjsuaConstants.PJ_TRUE</span><br><span class="line">            : pjsuaConstants.PJ_FALSE);</span><br><span class="line">    LogUtil.log(<span class="string">&quot;sipProfile.allow_contact_rewrite==&quot;</span> + sipProfile.allow_contact_rewrite + <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="comment">//keep alive interval 保持活动间隔</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    设置注册失败重试机制</span></span><br><span class="line">    <span class="comment">//自动注册时间间隔，默认300秒，即每5分钟注册一次</span></span><br><span class="line">    config.getRegConfig().setTimeoutSec(<span class="number">65</span>);</span><br><span class="line">    <span class="comment">//注册失败后，首次从新注册时间，默认0，当即发起从新注册</span></span><br><span class="line">    config.getRegConfig().setFirstRetryIntervalSec(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//注册失败后，从新发起注册的时间间隔，默认300秒</span></span><br><span class="line">    config.getRegConfig().setRetryIntervalSec(<span class="number">10</span>);</span><br><span class="line">    <span class="comment">//从新发起注册的时间随机范围（为了不多帐户状况下同时发起注册），</span></span><br><span class="line">    <span class="comment">// 正负5，实际时间是60~70秒，默认10秒</span></span><br><span class="line">    config.getRegConfig().setRandomRetryIntervalSec(<span class="number">5</span>);</span><br><span class="line">    <span class="comment">//注册超时前（timeoutSec）多长时间刷新客户端注册状态，默认5秒</span></span><br><span class="line">    config.getRegConfig().setDelayBeforeRefreshSec(<span class="number">5</span>);</span><br><span class="line"><span class="comment">//    config.getNatConfig().setIceWaitNominationTimeoutMsec(30);</span></span><br><span class="line"><span class="comment">//    config.getCallConfig().setTimerMinSESec(30);</span></span><br><span class="line"><span class="comment">//    config.getCallConfig().setTimerSessExpiresSec(30);</span></span><br><span class="line">    config.getNatConfig().setUdpKaIntervalSec(PreferencesWrapper.getInstance(MyApplication.getContext()).getUdpKeepAliveInterval());</span><br><span class="line">    <span class="comment">//proxies</span></span><br><span class="line">    setProxies(sipProfile, config);</span><br><span class="line">    <span class="comment">//mwi</span></span><br><span class="line">    config.getMwiConfig().setEnabled(sipProfile.mwi_enabled ? <span class="literal">true</span> : <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//account media config</span></span><br><span class="line">    config.getMediaConfig().setIpv6Use(sipProfile.ipv6_media_use == <span class="number">1</span> ? pjsua_ipv6_use.PJSUA_IPV6_ENABLED</span><br><span class="line">            : pjsua_ipv6_use.PJSUA_IPV6_DISABLED);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Transport</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">regUri</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">argument</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">switch</span> (sipProfile.transport) &#123;</span><br><span class="line">        <span class="keyword">case</span> SipProfile.TRANSPORT_UDP:</span><br><span class="line">            argument = <span class="string">&quot;;transport=udp;lr&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> SipProfile.TRANSPORT_TCP:</span><br><span class="line">            argument = <span class="string">&quot;;transport=tcp;lr&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> SipProfile.TRANSPORT_TLS:</span><br><span class="line">            <span class="comment">// TODO : differentiate ssl/tls ?</span></span><br><span class="line">            argument = <span class="string">&quot;;transport=tls;lr&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LogUtil.log(argument);</span><br><span class="line">    Log.e(<span class="string">&quot;argument&quot;</span>, argument);</span><br><span class="line">    <span class="keyword">if</span> (!TextUtils.isEmpty(argument)) &#123;</span><br><span class="line">        regUri = config.getRegConfig().getRegistrarUri();</span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(regUri)) &#123;</span><br><span class="line">            <span class="type">long</span> <span class="variable">initialProxyCnt</span> <span class="operator">=</span> config.getSipConfig().getProxies().size();</span><br><span class="line">            <span class="type">StringVector</span> <span class="variable">proxies</span> <span class="operator">=</span> config.getSipConfig().getProxies();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// TODO : remove lr and transport from uri</span></span><br><span class="line">            <span class="comment">// cfg.setReg_uri(pjsua.pj_str_copy(proposed_server));</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">firstProxy</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (proxies.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                firstProxy = proxies.get(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (initialProxyCnt == <span class="number">0</span> || TextUtils.isEmpty(firstProxy)) &#123;</span><br><span class="line">                config.getRegConfig().setRegistrarUri(regUri + argument);</span><br><span class="line"><span class="comment">//                cfg.setProxy_cnt(0);</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                proxies.set(<span class="number">0</span>, firstProxy + argument);</span><br><span class="line">                config.getSipConfig().setProxies(proxies);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//sip config</span></span><br><span class="line">    <span class="keyword">if</span> (sipProfile.force_contact != <span class="literal">null</span>) &#123;</span><br><span class="line">        config.getSipConfig().setContactForced(sipProfile.force_contact);</span><br><span class="line">    &#125;</span><br><span class="line">    config.getSipConfig().getAuthCreds().add(authCredInfo);</span><br><span class="line"></span><br><span class="line">    <span class="type">SipAccount</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SipAccount</span>(config);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//登陆账号，交由通讯模块处理，如果失败了，返回null ,这是个耗时性操作</span></span><br><span class="line">        account.create(config);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable error) &#123;</span><br><span class="line">        LogUtil.log(<span class="string">&quot;创建账号error&quot;</span>, error);</span><br><span class="line">        account = <span class="literal">null</span>;</span><br><span class="line">        Log.e(THIS_FILE, <span class="string">&quot;addAccount &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (account != <span class="literal">null</span>) &#123;</span><br><span class="line">        LogUtil.log(<span class="string">&quot;addAccount success. &quot;</span> + sipProfile.getUserName() + <span class="string">&quot;  id:&quot;</span> + account.getId());</span><br><span class="line">        accounts.put(account.getId(), account);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> account;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-6-account-create-config"><a href="#1-6-account-create-config" class="headerlink" title="1.6  account.create(config);"></a>1.6  account.create(config);</h3><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">create</span><span class="params">(AccountConfig cfg)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    pjsua2JNI.Account_create__SWIG_1(<span class="built_in">this</span>.swigCPtr, <span class="built_in">this</span>, AccountConfig.getCPtr(cfg), cfg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-注销"><a href="#2-注销" class="headerlink" title="2.注销"></a>2.注销</h2><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (flag == LOGOUT) &#123;</span><br><span class="line">                   LogUtils.e(<span class="string">&quot;退出登录。。。。&quot;</span>);</span><br><span class="line">                   prefProviderWrapper.setPreferenceBooleanValue(</span><br><span class="line">                           PreferencesWrapper.SHOW_MINE_WORK_UNREAD, <span class="literal">false</span>);</span><br><span class="line">                   <span class="type">SharedPreferences</span> <span class="variable">preferences</span> <span class="operator">=</span> PreferenceManager.getDefaultSharedPreferences(getBaseContext());</span><br><span class="line">                   preferences.edit().remove(HomeActivity.keyCheckZuzhiJiagou).apply();</span><br><span class="line">                   preferences.edit().remove(<span class="string">&quot;isFirstLogin&quot;</span>).apply();</span><br><span class="line">                   getContentResolver().call(MyContentProvider.BaseUri,</span><br><span class="line">                           <span class="string">&quot;deleteOrg&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>); <span class="comment">// 清除组织架构</span></span><br><span class="line">                   SessionManager.getInstance().resetSessionId(); <span class="comment">// 清除 session</span></span><br><span class="line">                   getContentResolver().delete(SipProfile.ACCOUNT_URI, <span class="string">&quot;1&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">                   <span class="type">Intent</span> <span class="variable">publishIntent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(SipManager.ACTION_SIP_ACCOUNT_CHANGED);</span><br><span class="line">                   publishIntent.putExtra(SipProfile.FIELD_USERNAME, account.username);</span><br><span class="line">                   <span class="type">String</span> <span class="variable">passMd5</span> <span class="operator">=</span> MD5.md5PassWord(account.data);</span><br><span class="line">                   passMd5 = <span class="keyword">new</span> <span class="title class_">SMSM3</span>().toMD5(account.data);</span><br><span class="line">                   publishIntent.putExtra(SipProfile.FIELD_DATA, passMd5);</span><br><span class="line">                   sendBroadcast(publishIntent);</span><br><span class="line">                   <span class="keyword">try</span> &#123;</span><br><span class="line">                       <span class="comment">//remove all cookies</span></span><br><span class="line">                       CookieSyncManager.createInstance(UserSettingActivity.<span class="built_in">this</span>);</span><br><span class="line">                       CookieManager.getInstance().removeAllCookie();</span><br><span class="line">                   &#125; <span class="keyword">catch</span> (IllegalStateException e) &#123;</span><br><span class="line">                       Log.e(THIS_FILE, <span class="string">&quot;remove all cookies failed cause&quot;</span>, e.fillInStackTrace());</span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line">                   sendBroadcast(<span class="keyword">new</span> <span class="title class_">Intent</span>(</span><br><span class="line">                           SipManager.ACTION_SIP_ACCOUNTS_DELETE));</span><br><span class="line">                   Manipulator.logout(UserSettingActivity.<span class="built_in">this</span>.getApplicationContext());</span><br><span class="line">                   <span class="comment">// 跳转到登录页面</span></span><br><span class="line">                   placeLogin();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure><h3 id="2-1-SipManager-ACTION-SIP-ACCOUNT-CHANGE-同上1-1-不再赘述"><a href="#2-1-SipManager-ACTION-SIP-ACCOUNT-CHANGE-同上1-1-不再赘述" class="headerlink" title="2.1 SipManager.ACTION_SIP_ACCOUNT_CHANGE 同上1.1 不再赘述"></a>2.1 SipManager.ACTION_SIP_ACCOUNT_CHANGE 同上1.1 不再赘述</h3><h3 id="2-2-SipManager-ACTION-SIP-ACCOUNTS-DELETE"><a href="#2-2-SipManager-ACTION-SIP-ACCOUNTS-DELETE" class="headerlink" title="2.2 SipManager.ACTION_SIP_ACCOUNTS_DELETE"></a>2.2 SipManager.ACTION_SIP_ACCOUNTS_DELETE</h3><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (SipManager.ACTION_SIP_ACCOUNTS_DELETE</span><br><span class="line">                .equals(intentAction)) &#123;</span><br><span class="line">            <span class="comment">// Added by txp 2016-2-29,Broadcast sent when we want to</span></span><br><span class="line">            <span class="comment">// unregister the current account and delete it.</span></span><br><span class="line">            deleteAllAccounts(context);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-deleteAllAccounts-context"><a href="#2-3-deleteAllAccounts-context" class="headerlink" title="2.3  deleteAllAccounts(context);"></a>2.3  deleteAllAccounts(context);</h3><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * unregister all accounts and delete it</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">deleteAllAccounts</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        LogUtils.e(<span class="string">&quot;删除所有账号&quot;</span>);</span><br><span class="line">        LogUtils.e(<span class="string">&quot;Remove current account and delete it&quot;</span>);</span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">c</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">id</span> <span class="operator">=</span> SipProfile.INVALID_ID;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            c = context.getContentResolver().query(SipProfile.ACCOUNT_URI,</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;</span><br><span class="line">                            SipProfile.FIELD_ID</span><br><span class="line">                    &#125;, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (c != <span class="literal">null</span> &amp;&amp; c.moveToFirst()) &#123;</span><br><span class="line">                <span class="keyword">do</span> &#123;</span><br><span class="line">                    id = c.getLong(c.getColumnIndex(SipProfile.FIELD_ID));</span><br><span class="line">                    context.getContentResolver().delete(ContentUris.withAppendedId(</span><br><span class="line">                            SipProfile.ACCOUNT_ID_URI_BASE, id), <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">while</span> (c.moveToNext());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(THIS_FILE, <span class="string">&quot;Error on looping delete over sip profiles&quot;</span>, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (c != <span class="literal">null</span>) &#123;</span><br><span class="line">                c.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="3-退出"><a href="#3-退出" class="headerlink" title="3.退出"></a>3.退出</h2><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">prefProviderWrapper.setPreferenceBooleanValue(</span><br><span class="line">                          PreferencesWrapper.HAS_BEEN_QUIT, <span class="literal">true</span>);</span><br><span class="line">                  LauncherUI.needShowWelcomeLogo = <span class="literal">true</span>;</span><br><span class="line">                  <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(</span><br><span class="line">                          SipManager.ACTION_SIP_ACCOUNTS_UNREGISTER);</span><br><span class="line">                  sendBroadcast(intent);</span><br><span class="line">                  disconnect(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><h3 id="3-1-SipManager-ACTION-SIP-ACCOUNTS-UNREGISTER"><a href="#3-1-SipManager-ACTION-SIP-ACCOUNTS-UNREGISTER" class="headerlink" title="3.1 SipManager.ACTION_SIP_ACCOUNTS_UNREGISTER"></a>3.1 SipManager.ACTION_SIP_ACCOUNTS_UNREGISTER</h3><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (action.equals(SipManager.ACTION_SIP_ACCOUNTS_UNREGISTER)) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            unregisterAllAccounts(<span class="literal">true</span>);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (SameThreadException e) &#123;</span><br><span class="line">                            Log.e(THIS_FILE, <span class="string">&quot;unregister accounts failed&quot;</span>);</span><br><span class="line">                        &#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-unregisterAllAccounts-true"><a href="#3-2-unregisterAllAccounts-true" class="headerlink" title="3.2  unregisterAllAccounts(true);"></a>3.2  unregisterAllAccounts(true);</h3><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * unregister all accounts</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unregisterAllAccounts</span><span class="params">(<span class="type">boolean</span> needRunOnSipExecutor)</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line"></span><br><span class="line">       <span class="type">Runnable</span> <span class="variable">runnable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">               releaseResources();</span><br><span class="line">               Log.d(THIS_FILE, <span class="string">&quot;Remove all accounts&quot;</span>);</span><br><span class="line">               <span class="type">Cursor</span> <span class="variable">c</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                   c = getContentResolver().query(SipProfile.ACCOUNT_URI,</span><br><span class="line">                           DBProvider.ACCOUNT_FULL_PROJECTION, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">                   <span class="keyword">if</span> (c != <span class="literal">null</span> &amp;&amp; c.moveToFirst()) &#123;</span><br><span class="line">                       <span class="keyword">do</span> &#123;</span><br><span class="line">                           <span class="type">SipProfile</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SipProfile</span>(c);</span><br><span class="line">                           setAccountRegistration(account, <span class="number">0</span>, <span class="literal">false</span>);</span><br><span class="line">                       &#125; <span class="keyword">while</span> (c.moveToNext());</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                   Log.e(THIS_FILE, <span class="string">&quot;Error on looping over sip profiles&quot;</span>, e);</span><br><span class="line">               &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                   <span class="keyword">if</span> (c != <span class="literal">null</span>) &#123;</span><br><span class="line">                       c.close();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (needRunOnSipExecutor) &#123;</span><br><span class="line">           <span class="comment">//放在和sip初始化同一个线程中执行，否则就需要在执行线程中调用Endpoint.libRegisterThread去注册</span></span><br><span class="line">           getExecutor().execute(runnable);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           runnable.run();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-disconnect-true"><a href="#3-3-disconnect-true" class="headerlink" title="3.3  disconnect(true);"></a>3.3  disconnect(true);</h3><p class="code-caption" data-lang="" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> void disconnect(boolean quit) &#123;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>d(THIS_FILE, <span class="string">&quot;True disconnection...&quot;</span>);</span><br><span class="line">        Intent intent = <span class="keyword">new</span> <span class="constructor">Intent(SipManager.ACTION_OUTGOING_UNREGISTER)</span>;</span><br><span class="line">        intent.put<span class="constructor">Extra(SipManager.EXTRA_OUTGOING_ACTIVITY, <span class="params">new</span> ComponentName(<span class="params">this</span>, HomeActivity.<span class="params">class</span>)</span>);</span><br><span class="line">        send<span class="constructor">Broadcast(<span class="params">intent</span>)</span>;</span><br><span class="line">        <span class="keyword">if</span> (quit) &#123;</span><br><span class="line">            <span class="comment">// give time for sip service to destory self and sip stack</span></span><br><span class="line">            <span class="comment">// SystemClock.sleep(2000);</span></span><br><span class="line">            <span class="comment">// finish();</span></span><br><span class="line">            DelayedDismissWaitDialog dialog = <span class="keyword">new</span> <span class="constructor">DelayedDismissWaitDialog(<span class="params">this</span>, 1000)</span>;</span><br><span class="line">            dialog.set<span class="constructor">Message(R.<span class="params">string</span>.<span class="params">alert_message_quiting</span>)</span>;</span><br><span class="line">            dialog.set<span class="constructor">OnDismissListener(<span class="params">new</span> DialogInterface.OnDismissListener()</span> &#123;</span><br><span class="line">                @Override</span><br><span class="line">                public void on<span class="constructor">Dismiss(DialogInterface <span class="params">dialog</span>)</span> &#123;</span><br><span class="line">                    Intent startMain = <span class="keyword">new</span> <span class="constructor">Intent(Intent.ACTION_MAIN)</span>;</span><br><span class="line">                    startMain.add<span class="constructor">Category(Intent.CATEGORY_HOME)</span>;</span><br><span class="line">                    startMain.set<span class="constructor">Flags(Intent.FLAG_ACTIVITY_NEW_TASK)</span>;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        start<span class="constructor">Activity(<span class="params">startMain</span>)</span>;</span><br><span class="line">                    &#125; catch (Exception e) &#123;</span><br><span class="line">                        <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>e(THIS_FILE, <span class="string">&quot;exitApp failed cause&quot;</span>, e);</span><br><span class="line">                    &#125;</span><br><span class="line">                    clear<span class="constructor">AllSherlockFragmentActivities()</span>;</span><br><span class="line"><span class="comment">//                    android.os.Process.killProcess(android.os.Process.myPid());</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            dialog.show<span class="literal">()</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="总结：注销跟退出的区别是"><a href="#总结：注销跟退出的区别是" class="headerlink" title="总结：注销跟退出的区别是"></a>总结：注销跟退出的区别是</h3><p>                  <br>1、退出 只是注销当前账号 并不删除账号，缓存等数据<br>2、注销 注销当前账号 删除当前账号 清空账号，账号信息数据库 删除缓存等数据<br>3、注销后会跳转到登录界面 退出后会退出CU到手机桌面</p><h2 id="4-退到后台再进入-资源未被回收时，未进行任何操作"><a href="#4-退到后台再进入-资源未被回收时，未进行任何操作" class="headerlink" title="4.退到后台再进入 资源未被回收时，未进行任何操作"></a>4.退到后台再进入 资源未被回收时，未进行任何操作</h2><h2 id="5-退到后台再进入-资源被回收时-重新登录"><a href="#5-退到后台再进入-资源被回收时-重新登录" class="headerlink" title="5.退到后台再进入 资源被回收时 重新登录"></a>5.退到后台再进入 资源被回收时 重新登录</h2><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(action.equals(ACTION_ACCOUNT_REGIEST))&#123;</span><br><span class="line">            <span class="keyword">if</span> (System.currentTimeMillis() - lastCheckRegisterTime &gt; <span class="number">1000</span> * <span class="number">10</span></span><br><span class="line">                    &amp;&amp; service.isConnectivityValid()) &#123;</span><br><span class="line">                lastCheckRegisterTime = System.currentTimeMillis();</span><br><span class="line">                <span class="type">long</span> <span class="variable">accountId</span> <span class="operator">=</span> SipProfile</span><br><span class="line">                        .getProfileAccountId(context);</span><br><span class="line">                <span class="type">SipProfileState</span> <span class="variable">sipProfile</span> <span class="operator">=</span> SipProfileState.getSipProfileState(context, accountId);</span><br><span class="line">                <span class="type">SipProfile</span> <span class="variable">account</span> <span class="operator">=</span> service.getAccount(accountId);</span><br><span class="line">                <span class="keyword">if</span> (sipProfile != <span class="literal">null</span></span><br><span class="line">                        &amp;&amp; System.currentTimeMillis() - sipProfile.getLast_register_time() &gt; <span class="number">1000</span> * account.reg_timeout) &#123;</span><br><span class="line"></span><br><span class="line">                    service.setAccountRegistration(account, account.active ? <span class="number">1</span> : <span class="number">0</span>, <span class="literal">true</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h2 id="6-网络切换"><a href="#6-网络切换" class="headerlink" title="6.网络切换"></a>6.网络切换</h2><h3 id="6-1-飞行模式切换（wifi-4g-切换）"><a href="#6-1-飞行模式切换（wifi-4g-切换）" class="headerlink" title="6.1 飞行模式切换（wifi 4g 切换）"></a>6.1 飞行模式切换（wifi 4g 切换）</h3><h4 id="6-1-1-登录状态改变"><a href="#6-1-1-登录状态改变" class="headerlink" title="6.1.1 登录状态改变"></a>6.1.1 登录状态改变</h4><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (action.equals(SipManager.ACTION_SIP_REGISTRATION_CHANGED)) &#123;</span><br><span class="line">            AccountListUtils.<span class="type">AccountStatusDisplay</span> <span class="variable">accountDisplay</span> <span class="operator">=</span> AccountListUtils.getAccountDisplay(</span><br><span class="line">                    service, SipProfile.DEFAULT_ACCOUNT_ID);</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> (accountDisplay != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">statusCode</span> <span class="operator">=</span> accountDisplay.statusCode;</span><br><span class="line">                <span class="keyword">if</span> (statusCode == SipCallSession.StatusCode.OK &amp;&amp; changeAccount) &#123;</span><br><span class="line">                    Log.d(THIS_FILE, <span class="string">&quot;change account and register success&quot;</span>);</span><br><span class="line">                    changeAccount = <span class="literal">false</span>;</span><br><span class="line">                 </span><br><span class="line">                  </span><br><span class="line">                    EduContacts.updateAllRemoteContactsAndGroups(service);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h4 id="6-1-2-网络连接改变"><a href="#6-1-2-网络连接改变" class="headerlink" title="6.1.2 网络连接改变"></a>6.1.2 网络连接改变</h4><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> (action.equals(ConnectivityManager.CONNECTIVITY_ACTION)) &#123;</span><br><span class="line">            <span class="type">ConnectivityManagerWrap</span> <span class="variable">cm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ConnectivityManagerWrap</span>(context);</span><br><span class="line">            <span class="type">NetworkInfo</span> <span class="variable">activeNetwork</span> <span class="operator">=</span> cm.getActiveNetworkInfo();</span><br><span class="line">            onConnectivityChanged(context,activeNetwork, isSticky);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="6-1-3-onConnectivityChanged-context-activeNetwork-isSticky"><a href="#6-1-3-onConnectivityChanged-context-activeNetwork-isSticky" class="headerlink" title="6.1.3 onConnectivityChanged(context,activeNetwork, isSticky);"></a>6.1.3 onConnectivityChanged(context,activeNetwork, isSticky);</h4><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Treat the fact that the connectivity has changed</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> info Network info</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> SameThreadException</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">onConnectivityChanged</span><span class="params">(Context context,NetworkInfo info, <span class="type">boolean</span> isSticky)</span></span><br><span class="line">           <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">       LogUtils.i(<span class="string">&quot;onConnectivityChanged isSticky=&quot;</span> + isSticky);</span><br><span class="line">       <span class="comment">// We only care about the default network, and getActiveNetworkInfo()</span></span><br><span class="line">       <span class="comment">// is the only way to distinguish them. However, as broadcasts are</span></span><br><span class="line">       <span class="comment">// delivered asynchronously, we might miss DISCONNECTED events from</span></span><br><span class="line">       <span class="comment">// getActiveNetworkInfo(), which is critical to our SIP stack. To</span></span><br><span class="line">       <span class="comment">// solve this, if it is a DISCONNECTED event to our current network,</span></span><br><span class="line">       <span class="comment">// respect it. Otherwise get a new one from getActiveNetworkInfo().</span></span><br><span class="line">       <span class="keyword">if</span> (info == <span class="literal">null</span> || info.isConnected() ||</span><br><span class="line">               !info.getTypeName().equals(mNetworkType)) &#123;</span><br><span class="line">           <span class="type">ConnectivityManagerWrap</span> <span class="variable">cm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ConnectivityManagerWrap</span>(service);</span><br><span class="line">           info = cm.getActiveNetworkInfo();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="type">boolean</span> <span class="variable">connected</span> <span class="operator">=</span> (info != <span class="literal">null</span> &amp;&amp; info.isConnected() &amp;&amp; service.isConnectivityValid());</span><br><span class="line">       <span class="type">String</span> <span class="variable">networkType</span> <span class="operator">=</span> connected ? info.getTypeName() : <span class="string">&quot;null&quot;</span>;</span><br><span class="line">       <span class="type">String</span> <span class="variable">currentRoutes</span> <span class="operator">=</span> dumpRoutes(context);</span><br><span class="line">       String oldRoutes;</span><br><span class="line">       <span class="keyword">synchronized</span> (mRoutes) &#123;</span><br><span class="line">           oldRoutes = mRoutes;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// Ignore the event if the current active network is not changed.</span></span><br><span class="line">       <span class="keyword">if</span> (connected == mConnected &amp;&amp; networkType.equals(mNetworkType)</span><br><span class="line">               &amp;&amp; currentRoutes.equals(oldRoutes)) &#123;</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span> (Log.getLogLevel() &gt;= <span class="number">4</span>) &#123;</span><br><span class="line">           <span class="keyword">if</span> (!networkType.equals(mNetworkType)) &#123;</span><br><span class="line">               LogUtils.d(<span class="string">&quot;onConnectivityChanged(): &quot;</span> + mNetworkType +</span><br><span class="line">                       <span class="string">&quot; -&gt; &quot;</span> + networkType);</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               LogUtils.d(<span class="string">&quot;Route changed : &quot;</span> + mRoutes + <span class="string">&quot; -&gt; &quot;</span> + currentRoutes);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// Now process the event</span></span><br><span class="line">       <span class="keyword">synchronized</span> (mRoutes) &#123;</span><br><span class="line">           mRoutes = currentRoutes;</span><br><span class="line">       &#125;</span><br><span class="line">       mConnected = connected;</span><br><span class="line">       mNetworkType = networkType;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (!isSticky) &#123;</span><br><span class="line">           <span class="keyword">if</span> (connected) &#123;</span><br><span class="line">               LogUtils.i(<span class="string">&quot;We are connected, try to register all accounts&quot;</span>);</span><br><span class="line">               service.addAllAccounts();</span><br><span class="line">               SipReceiver.NetWorkConnected.connected();</span><br><span class="line">               service.restartSipStack();</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               LogUtils.i(<span class="string">&quot;We are not connected, update all accounts status offline&quot;</span>);</span><br><span class="line">               service.getPjSipService().setAccountStatusOffline();</span><br><span class="line"></span><br><span class="line"><span class="comment">//               service.unregisterAllAccounts(false);</span></span><br><span class="line"><span class="comment">//               if (service.stopSipStack()) &#123;</span></span><br><span class="line"><span class="comment">//                   service.stopSelf();</span></span><br><span class="line"><span class="comment">//               &#125;</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="6-1-4-如果网络连上-service-restartSipStack"><a href="#6-1-4-如果网络连上-service-restartSipStack" class="headerlink" title="6.1.4 如果网络连上  service.restartSipStack();"></a>6.1.4 如果网络连上  service.restartSipStack();</h4><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//     private KeepAliveTimer kaAlarm;</span></span><br><span class="line">   <span class="comment">// This is always done in SipExecutor thread</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">startSipStack</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">       <span class="comment">// Cache some prefs</span></span><br><span class="line">       supportMultipleCalls = prefsProviderWrapper</span><br><span class="line">               .getPreferenceBooleanValue(SipConfigManager.SUPPORT_MULTIPLE_CALLS);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (!isConnectivityValid()) &#123;</span><br><span class="line">           notifyUserOfMessage(R.string.connection_not_valid);</span><br><span class="line">           Log.e(THIS_FILE, <span class="string">&quot;No need to start sip&quot;</span>);</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       Log.d(THIS_FILE, <span class="string">&quot;Start was asked and we should actually start now&quot;</span>);</span><br><span class="line">       <span class="keyword">if</span> (pjService == <span class="literal">null</span>) &#123;</span><br><span class="line">           Log.d(THIS_FILE, <span class="string">&quot;Start was asked and pjService in not there&quot;</span>);</span><br><span class="line">           <span class="keyword">if</span> (!loadStack()) &#123;</span><br><span class="line">               Log.e(THIS_FILE, <span class="string">&quot;Unable to load SIP stack !! &quot;</span>);</span><br><span class="line">               <span class="keyword">return</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       Log.d(THIS_FILE, <span class="string">&quot;Ask pjservice to start itself&quot;</span>);</span><br><span class="line">       LogUtil.log(<span class="string">&quot;启动pjservice&quot;</span>);</span><br><span class="line">       presenceMgr.startMonitoring(<span class="built_in">this</span>);</span><br><span class="line">       <span class="keyword">if</span> (pjService.sipStart()) &#123;</span><br><span class="line">           <span class="comment">// This should be done after in acquire resource</span></span><br><span class="line">           <span class="comment">// But due to</span></span><br><span class="line">           <span class="comment">// http://code.google.com/p/android/issues/detail?id=21635</span></span><br><span class="line">           <span class="comment">// not a good idea</span></span><br><span class="line">           applyComponentEnablingState(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">           registerBroadcasts(<span class="built_in">this</span>);</span><br><span class="line">           Log.d(THIS_FILE, <span class="string">&quot;Add all accounts&quot;</span>);</span><br><span class="line">           LogUtil.log(<span class="string">&quot;添加账号  注册广播&quot;</span>, <span class="string">&quot;add all accounts&quot;</span>);</span><br><span class="line">           addAllAccounts();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="6-1-5-如果网络未连上-service-getPjSipService-setAccountStatusOffline"><a href="#6-1-5-如果网络未连上-service-getPjSipService-setAccountStatusOffline" class="headerlink" title="6.1.5 如果网络未连上 service.getPjSipService().setAccountStatusOffline();"></a>6.1.5 如果网络未连上 service.getPjSipService().setAccountStatusOffline();</h4><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 将所有的账号的数据库存储的状态标识为离线，网络断开时UI据此显示状态</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAccountStatusOffline</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">ContentValues</span> <span class="variable">cv</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line"></span><br><span class="line">       <span class="comment">// Should be fine : status code are coherent with RFC</span></span><br><span class="line">       <span class="comment">// status codes</span></span><br><span class="line">       <span class="comment">//标识为网络断开</span></span><br><span class="line">       cv.put(SipProfileState.STATUS_CODE, SipCallSession.StatusCode.PJSIP_SC_BAD_GATEWAY);</span><br><span class="line"></span><br><span class="line">       cv.put(SipProfileState.STATUS_TEXT, <span class="string">&quot;&quot;</span>);</span><br><span class="line">       cv.put(SipProfileState.EXPIRES, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="type">Cursor</span> <span class="variable">c</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           c = service.getContentResolver().query(SipProfile.ACCOUNT_URI,</span><br><span class="line">                   DBProvider.ACCOUNT_FULL_PROJECTION, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">           <span class="keyword">if</span> (c != <span class="literal">null</span> &amp;&amp; c.moveToFirst()) &#123;</span><br><span class="line">               <span class="keyword">do</span> &#123;</span><br><span class="line">                   <span class="type">SipProfile</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SipProfile</span>(c);</span><br><span class="line">                   service.getContentResolver().update(ContentUris.withAppendedId(SipProfile.ACCOUNT_STATUS_URI,</span><br><span class="line">                           account.id), cv, <span class="literal">null</span>,</span><br><span class="line">                           <span class="literal">null</span>);</span><br><span class="line">               &#125; <span class="keyword">while</span> (c.moveToNext());</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           LogUtils.e(<span class="string">&quot;Error on looping over sip profiles&quot;</span>, e);</span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">           <span class="keyword">if</span> (c != <span class="literal">null</span>) &#123;</span><br><span class="line">               c.close();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>       </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2.SIP发送消息流程梳理</title>
      <link href="/xiaoalei.github.io/2022/04/02/2-SIP%E5%BF%83%E8%B7%B3%E7%9B%B8%E5%85%B3%E6%95%B4%E7%90%86/"/>
      <url>/xiaoalei.github.io/2022/04/02/2-SIP%E5%BF%83%E8%B7%B3%E7%9B%B8%E5%85%B3%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="1-snedMsg"><a href="#1-snedMsg" class="headerlink" title="1.snedMsg"></a>1.snedMsg</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> target      the receiver 接收者</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> textContent the message content 消息内容</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> type        the message mimeType &#123;<span class="doctag">@link</span> SipMessage#MESSAGE_TYPE_TEXT&#125; etc 消息类型</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> filePath    the path of the file which will be post to the remote  消息路径</span></span><br><span class="line"><span class="comment">  *                    server</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> data        the associated data to the message,actually only use for type audio,means the 消息大小</span></span><br><span class="line"><span class="comment">  *                    length of the audio</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMessage</span><span class="params">(String target, String textContent, String type,</span></span><br><span class="line"><span class="params">                         <span class="keyword">final</span> String filePath,</span></span><br><span class="line"><span class="params">                         <span class="keyword">final</span> <span class="type">int</span> data)</span> &#123;</span><br><span class="line">     LogUtil.log(<span class="string">&quot;发送文字消息&quot;</span>, target, textContent, type, filePath, data);</span><br><span class="line">     <span class="keyword">if</span> (checkDebugMode(textContent)) &#123;</span><br><span class="line">         <span class="keyword">return</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     textContent = TextUtils.isEmpty(textContent) ? <span class="string">&quot;&quot;</span> : textContent;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> <span class="type">String</span> <span class="variable">msgType</span> <span class="operator">=</span> getMessageType(type);</span><br><span class="line">     <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_MSG_STATUS.equals(msgType)) &#123;</span><br><span class="line">         <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line">         <span class="type">StatusMsgBean</span> <span class="variable">statusMsgBean</span> <span class="operator">=</span> gson.fromJson(textContent, StatusMsgBean.class);</span><br><span class="line">         <span class="keyword">if</span> (!statusMsgBean.getMsgType().equals(<span class="string">&quot;SMS&quot;</span>)) &#123;</span><br><span class="line">             target = userID;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (msgType.equals(SipMessage.MESSAGE_TYPE_MSG_DELETE)) &#123;</span><br><span class="line">         target = userID;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     mActionBar.setVisibility(View.VISIBLE);</span><br><span class="line">     <span class="keyword">if</span> (mMessageInputFragment != <span class="literal">null</span>) &#123;</span><br><span class="line">         mMessageInputFragment.hideInputView(View.VISIBLE);</span><br><span class="line">     &#125;</span><br><span class="line"><span class="comment">// 友盟统计消息发送的类型</span></span><br><span class="line">     umengStatistics(msgType);</span><br><span class="line"><span class="comment">//调用广播来发送消息</span></span><br><span class="line">     HttpMessageUtils.sendMessageBroadcast(getActivity(), textContent,</span><br><span class="line">             TextUtils.isEmpty(target) ? remoteFullFrom : target, msgType, filePath, data);</span><br><span class="line">     <span class="comment">// 清楚输入框的内容</span></span><br><span class="line">     clearEditText(msgType);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="2-sendMessageBroadcast"><a href="#2-sendMessageBroadcast" class="headerlink" title="2.sendMessageBroadcast"></a>2.sendMessageBroadcast</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 发送消息</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> context 上下文对象</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> textContent 消息内容</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> remoteFullFrom 接收者</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> msgType 消息类型</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> filePath 消息路径</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> data 消息大小</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sendMessageBroadcast</span><span class="params">(Context context, String textContent,</span></span><br><span class="line"><span class="params">                                           String remoteFullFrom,</span></span><br><span class="line"><span class="params">                                           String msgType, String filePath, <span class="type">int</span> data)</span> &#123;</span><br><span class="line"></span><br><span class="line">       <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(SipManager.ACTION_SEND_MESSAGE);</span><br><span class="line">       intent.putExtra(MessageFragment.BroadcastBundleKeys.SEND_MSG_TXT_CONTENT, textContent);</span><br><span class="line">       intent.putExtra(MessageFragment.BroadcastBundleKeys.SEND_MSG_REMOTE_FULL_FROM,</span><br><span class="line">               remoteFullFrom);</span><br><span class="line">       intent.putExtra(MessageFragment.BroadcastBundleKeys.SEND_MSG_TYPE, msgType);</span><br><span class="line">       intent.putExtra(MessageFragment.BroadcastBundleKeys.SEND_MSG_FILE_PATH, filePath);</span><br><span class="line">       intent.putExtra(MessageFragment.BroadcastBundleKeys.SEND_MSG_DATA, data);</span><br><span class="line"></span><br><span class="line">       intent.putExtra(MessageFragment.BroadcastBundleKeys.SEND_MSG_TIMESTAMP,</span><br><span class="line">               System.currentTimeMillis());</span><br><span class="line"><span class="comment">//      跳转到SipServer</span></span><br><span class="line">       context.sendBroadcast(intent);</span><br><span class="line"><span class="comment">//       静态dumpstack()方法提供一个new exception (&quot;stack trace&quot;).printstacktrace ()的封装，打印一个追踪当前线程的堆栈</span></span><br><span class="line"><span class="comment">//       Thread.dumpStack();</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h1 id="3-SipManager-ACTION-SEND-MESSAGE广播监听"><a href="#3-SipManager-ACTION-SEND-MESSAGE广播监听" class="headerlink" title="3.SipManager.ACTION_SEND_MESSAGE广播监听"></a>3.SipManager.ACTION_SEND_MESSAGE广播监听</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 注册广播监听</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">registerServiceBroadcasts</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (serviceReceiver == <span class="literal">null</span>) &#123;</span><br><span class="line">          <span class="type">IntentFilter</span> <span class="variable">intentfilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntentFilter</span>();</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_DEFER_OUTGOING_UNREGISTER);</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_OUTGOING_UNREGISTER);</span><br><span class="line">          <span class="comment">// added by txp,2013-9-10 register broadcast for unregister all</span></span><br><span class="line">          <span class="comment">// accounts</span></span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_SIP_ACCOUNTS_UNREGISTER);</span><br><span class="line">          <span class="comment">// added by txp,2013-10-16 register broadcast for cancel message</span></span><br><span class="line">          <span class="comment">// notification</span></span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_CANCEL_MESSAGE_NOTIFICATION);</span><br><span class="line">          <span class="comment">// added by zjf 2014-08-19</span></span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_SET_VIEWING_MESSAGE);</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_SEND_MESSAGE);</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_FORWARD_MESSAGE);</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_MAKE_CALL_WITH_OPTIONS);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_SIP_MESSAGE_CONVERSATION_DELETED);</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_SIP_MESSAGE_READ_STATUS_CHANGED);</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_SIP_ACCOUNT_OFF_LINE);</span><br><span class="line">          intentfilter.addAction(SipManager.ACTION_SIP_CANCEL_ALL_NOTIFICATIONS);</span><br><span class="line"></span><br><span class="line">          serviceReceiver = <span class="keyword">new</span> <span class="title class_">BroadcastReceiver</span>() &#123;</span><br><span class="line">              <span class="meta">@Override</span></span><br><span class="line">              <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span> &#123;</span><br><span class="line">                  LogUtils.d(<span class="string">&quot;sip service 收到的action: %s&quot;</span>, intent.getAction());</span><br><span class="line">                  LogUtils.v(intent.getExtras());</span><br><span class="line">                  <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> intent.getAction();</span><br><span class="line">                  <span class="keyword">if</span> (action.equals(SipManager.ACTION_OUTGOING_UNREGISTER)) &#123;</span><br><span class="line">                      unregisterForOutgoing((ComponentName) intent</span><br><span class="line">                              .getParcelableExtra(SipManager.EXTRA_OUTGOING_ACTIVITY));</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action.equals(SipManager.ACTION_DEFER_OUTGOING_UNREGISTER)) &#123;</span><br><span class="line">                      deferUnregisterForOutgoing((ComponentName) intent</span><br><span class="line">                              .getParcelableExtra(SipManager.EXTRA_OUTGOING_ACTIVITY));</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action.equals(SipManager.ACTION_SIP_ACCOUNTS_UNREGISTER)) &#123;</span><br><span class="line">                      <span class="keyword">try</span> &#123;</span><br><span class="line">                          unregisterAllAccounts(<span class="literal">true</span>);</span><br><span class="line">                      &#125; <span class="keyword">catch</span> (SameThreadException e) &#123;</span><br><span class="line">                          Log.e(THIS_FILE, <span class="string">&quot;unregister accounts failed&quot;</span>);</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action.equals(SipManager.ACTION_CANCEL_MESSAGE_NOTIFICATION)) &#123;</span><br><span class="line">                      notificationManager.cancelMessages();</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action.equals(SipManager.ACTION_SIP_MESSAGE_CONVERSATION_DELETED)</span><br><span class="line">                          || action.equals(SipManager.ACTION_SIP_MESSAGE_READ_STATUS_CHANGED)) &#123;</span><br><span class="line">                      notificationManager.buildUnreadMessagesList();</span><br><span class="line"><span class="comment">//                      notificationManager.cancelMessages();</span></span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipManager.ACTION_SET_VIEWING_MESSAGE.equals(action)) &#123;</span><br><span class="line">                      <span class="keyword">if</span> (intent != <span class="literal">null</span>) &#123;</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">from</span> <span class="operator">=</span> intent</span><br><span class="line">                                  .getStringExtra(</span><br><span class="line">                                          MessageFragment.BroadcastBundleKeys.SET_VIEWING_MSG_REMOTE_FROM);</span><br><span class="line">                          notificationManager.setViewingMessageFrom(from);</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipManager.ACTION_SEND_MESSAGE.equals(action)) &#123;</span><br><span class="line">                      <span class="comment">//发送聊天</span></span><br><span class="line">                      LogUtil.printIntent(intent);</span><br><span class="line">                      <span class="keyword">if</span> (intent != <span class="literal">null</span>) &#123;</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_TXT_CONTENT);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">to</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_REMOTE_FULL_FROM);</span><br><span class="line"></span><br><span class="line">                          <span class="type">long</span> <span class="variable">accountId</span> <span class="operator">=</span> SipProfile.INVALID_ID;</span><br><span class="line">                          <span class="type">SipProfile</span> <span class="variable">sipProfile</span> <span class="operator">=</span> SipProfile.getAccountFromCurrentAppContext(SipService.<span class="built_in">this</span>);</span><br><span class="line">                          <span class="keyword">if</span> (sipProfile != <span class="literal">null</span>) &#123;</span><br><span class="line">                              accountId = sipProfile.id;</span><br><span class="line">                          &#125;</span><br><span class="line"></span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">msgType</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_TYPE);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_FILE_PATH);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">int</span> <span class="variable">data</span> <span class="operator">=</span> intent.getIntExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_DATA, <span class="number">0</span>);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">long</span> <span class="variable">timestamp</span> <span class="operator">=</span> intent.getLongExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_TIMESTAMP, -<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                          <span class="keyword">try</span> &#123;</span><br><span class="line">                              <span class="keyword">if</span> (timestamp != lastMsgSendingTimestamp) &#123;</span><br><span class="line">                                  lastMsgSendingTimestamp = timestamp;</span><br><span class="line">                                  binder.sendMessage(content, to, accountId, msgType, filePath,</span><br><span class="line">                                          data);</span><br><span class="line">                                  LogUtils.d(<span class="string">&quot;binder.sendMessage(....)&quot;</span>);</span><br><span class="line">                              &#125;</span><br><span class="line">                          &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                              e.printStackTrace();</span><br><span class="line">                          &#125;</span><br><span class="line">                      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                          Toast.makeText(context, <span class="string">&quot;网络不可用&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipManager.ACTION_FORWARD_MESSAGE.equals(action)) &#123;</span><br><span class="line">                      <span class="keyword">if</span> (intent != <span class="literal">null</span>) &#123;</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_TXT_CONTENT);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">to</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_REMOTE_FULL_FROM);</span><br><span class="line"></span><br><span class="line">                          <span class="type">long</span> <span class="variable">accountId</span> <span class="operator">=</span> SipProfile.INVALID_ID;</span><br><span class="line">                          <span class="type">SipProfile</span> <span class="variable">sipProfile</span> <span class="operator">=</span> SipProfile.getAccountFromCurrentAppContext(SipService.<span class="built_in">this</span>);</span><br><span class="line">                          <span class="keyword">if</span> (sipProfile != <span class="literal">null</span>) &#123;</span><br><span class="line">                              accountId = sipProfile.id;</span><br><span class="line">                          &#125;</span><br><span class="line"></span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">msgType</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_TYPE);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_FILE_PATH);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">int</span> <span class="variable">data</span> <span class="operator">=</span> intent.getIntExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_DATA, <span class="number">0</span>);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">long</span> <span class="variable">timestamp</span> <span class="operator">=</span> intent.getLongExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.SEND_MSG_TIMESTAMP, -<span class="number">1</span>);</span><br><span class="line"><span class="comment">//                        多余的逻辑 删除掉 解决转发丢消息的问题</span></span><br><span class="line"><span class="comment">//                          if (timestamp != lastMsgSendingTimestamp) &#123;</span></span><br><span class="line"><span class="comment">//                              lastMsgSendingTimestamp = timestamp;</span></span><br><span class="line">                          <span class="keyword">try</span> &#123;</span><br><span class="line">                              binder.forwardMessage(content, to, accountId, msgType, filePath,</span><br><span class="line">                                      data);</span><br><span class="line">                          &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                              e.printStackTrace();</span><br><span class="line">                          &#125;</span><br><span class="line"><span class="comment">//                          &#125;</span></span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipManager.ACTION_MAKE_CALL_WITH_OPTIONS.equals(action)) &#123;</span><br><span class="line">                      <span class="keyword">if</span> (intent != <span class="literal">null</span>) &#123;</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">String</span> <span class="variable">callee</span> <span class="operator">=</span> intent.getStringExtra(</span><br><span class="line">                                  MessageFragment.BroadcastBundleKeys.MAKE_CALL_WITH_OPTS_CALLEE);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">long</span> <span class="variable">accountId</span> <span class="operator">=</span> intent</span><br><span class="line">                                  .getLongExtra(</span><br><span class="line">                                          MessageFragment.BroadcastBundleKeys.MAKE_CALL_WITH_OPTS_ACCOUNT_ID,</span><br><span class="line">                                          -<span class="number">1</span>);</span><br><span class="line">                          <span class="keyword">final</span> <span class="type">Bundle</span> <span class="variable">options</span> <span class="operator">=</span> intent</span><br><span class="line">                                  .getBundleExtra(</span><br><span class="line">                                          MessageFragment.BroadcastBundleKeys.MAKE_CALL_WITH_OPTS_OPTIONS);</span><br><span class="line">                          <span class="keyword">try</span> &#123;</span><br><span class="line">                              binder.makeCallWithOptions(callee, (<span class="type">int</span>) accountId, options);</span><br><span class="line">                          &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                              e.printStackTrace();</span><br><span class="line">                          &#125;</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipManager.ACTION_SIP_ACCOUNT_OFF_LINE.equals(action)) &#123;</span><br><span class="line">                      LogUtil.log(<span class="string">&quot;sip服务收到离线的广播&quot;</span>);</span><br><span class="line">                      LogUtil.printIntent(intent);</span><br><span class="line">                      <span class="keyword">try</span> &#123;</span><br><span class="line">                          deleteAllAccountsNotUnRegister();</span><br><span class="line">                      &#125; <span class="keyword">catch</span> (SameThreadException e) &#123;</span><br><span class="line">                          Log.e(THIS_FILE, <span class="string">&quot;delete accounts failed&quot;</span>);</span><br><span class="line">                          LogUtil.log(e);</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipManager.ACTION_SIP_CANCEL_ALL_NOTIFICATIONS.equals(action)) &#123;</span><br><span class="line">                      notificationManager.cancelAll();</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">          &#125;;</span><br><span class="line">          registerReceiver(serviceReceiver, intentfilter);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="4-binder-sendMessage-content-to-accountId-msgType-filePath"><a href="#4-binder-sendMessage-content-to-accountId-msgType-filePath" class="headerlink" title="4.binder.sendMessage(content, to, accountId, msgType, filePath,"></a>4.binder.sendMessage(content, to, accountId, msgType, filePath,</h1><pre><code>                                        data);</code></pre><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment">        * SipServer 发送消息</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> message 内容</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> callee 接收者</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> accountId 当前用户Id</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> mimeType 消息类型</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> filePath 消息路径</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param</span> data 消息大小</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@throws</span> RemoteException 可能会报的异常</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMessage</span><span class="params">(<span class="keyword">final</span> String message, <span class="keyword">final</span> String callee, <span class="keyword">final</span> <span class="type">long</span> accountId,</span></span><br><span class="line"><span class="params">                               <span class="keyword">final</span> String mimeType,</span></span><br><span class="line"><span class="params">                               <span class="keyword">final</span> String filePath, <span class="keyword">final</span> <span class="type">int</span> data)</span> <span class="keyword">throws</span> RemoteException &#123;</span><br><span class="line">           LogUtils.i(<span class="string">&quot;%s, %s, %s, %s, %s, %s&quot;</span>, message, callee, accountId, mimeType, filePath, data);</span><br><span class="line">           SipService.<span class="built_in">this</span>.enforceCallingOrSelfPermission(SipManager.PERMISSION_USE_SIP, <span class="literal">null</span>);</span><br><span class="line">           <span class="comment">// We have to ensure service is properly started and not just binded</span></span><br><span class="line">           <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">               <span class="comment">//android8.0以上通过startForegroundService启动service</span></span><br><span class="line">               SipService.<span class="built_in">this</span>.startForegroundService(<span class="keyword">new</span> <span class="title class_">Intent</span>(SipService.<span class="built_in">this</span>, SipService.class));</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               SipService.<span class="built_in">this</span>.startService(<span class="keyword">new</span> <span class="title class_">Intent</span>(SipService.<span class="built_in">this</span>, SipService.class));</span><br><span class="line">           &#125;</span><br><span class="line">           Log.i(THIS_FILE, <span class="string">&quot;try to sms &quot;</span> + callee + <span class="string">&quot; mimeType=&quot;</span> + mimeType);</span><br><span class="line">           <span class="type">int</span> <span class="variable">textSize</span> <span class="operator">=</span> message != <span class="literal">null</span> ? message.getBytes().length : <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_TEXT.equals(mimeType)</span><br><span class="line">                   || (mimeType.equals(SipMessage.MESSAGE_TYPE_RECEIPT) &amp;&amp; textSize &gt;= SipMessage.LONG_TEXT_MIN_BYTES)) &#123;</span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="type">MessageBean</span> <span class="variable">textMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextMessageBean</span>(message, accountId, pjService, callee, SipService.<span class="built_in">this</span>, mimeType);</span><br><span class="line">                       textMessageBean.sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_CANCEL.equals(mimeType)) &#123;</span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="type">MessageBean</span> <span class="variable">customMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextCancelMessageBean</span>(message, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                       customMessageBean.sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_API.equals(mimeType)) &#123;</span><br><span class="line">               <span class="comment">// it is a handler thread</span></span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="type">MessageBean</span> <span class="variable">apiMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ApiMessageBean</span>(message, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                       apiMessageBean.sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_APPROVE.equals(mimeType)) &#123;</span><br><span class="line">               <span class="comment">// it is a handler thread</span></span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       Log.i(THIS_FILE, <span class="string">&quot;approve sms &quot;</span> + callee + <span class="string">&quot; mimeType=&quot;</span> + mimeType);</span><br><span class="line">                       <span class="type">MessageBean</span> <span class="variable">approveMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ApproveMessageBean</span>(message, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                       approveMessageBean.sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_CIRCLE.equals(mimeType)) &#123;</span><br><span class="line">               <span class="comment">// it is a handler thread</span></span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="type">MessageBean</span> <span class="variable">circleMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CircleMessageBean</span>(message, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                       circleMessageBean.sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_LOC.equals(mimeType)) &#123;</span><br><span class="line">               <span class="comment">// it is a handler thread</span></span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="type">MessageBean</span> <span class="variable">locMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LocMessageBean</span>(message, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                       locMessageBean.sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_JOIN_CLASS.equals(mimeType)) &#123;</span><br><span class="line"></span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="keyword">new</span> <span class="title class_">CommonMessageBean</span>.Builder(pjService, callee, accountId, SipService.<span class="built_in">this</span>).setMimeType(mimeType)</span><br><span class="line">                               .setDbMessageBody(message)</span><br><span class="line">                               .setSendMessageBody(message)</span><br><span class="line">                               .setNeedInsertToDb(<span class="literal">false</span>).create().sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_SHARE.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_NET_DISK.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_TRAFFIC.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_EXPRESSION.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_NAME_CARD.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_MSG_STATUS.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_MSG_DELETE.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_METTING.equals(mimeType)</span><br><span class="line">                   || SipMessage.MESSAGE_TYPE_TRANSFER.equals(mimeType)</span><br><span class="line">                   || mimeType.equals(SipMessage.MESSAGE_TYPE_RECEIPT)) &#123;</span><br><span class="line">               <span class="comment">// it is a handler thread</span></span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="keyword">new</span> <span class="title class_">CommonMessageBean</span>.Builder(pjService, callee, accountId, SipService.<span class="built_in">this</span>).setMimeType(mimeType)</span><br><span class="line">                               .setDbMessageBody(message)</span><br><span class="line">                               .setSendMessageBody(message)</span><br><span class="line">                               .setNeedInsertToDb(<span class="literal">true</span>).create().sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line"></span><br><span class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_RECORD.equals(mimeType)) &#123;</span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">SipRunnable</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doRun</span><span class="params">()</span> <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">                       <span class="type">MessageBean</span> <span class="variable">textMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MergeForwardBean</span>(message, accountId, pjService, callee, SipService.<span class="built_in">this</span>, mimeType);</span><br><span class="line">                       textMessageBean.sendMessage();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="comment">// every time create a new thread</span></span><br><span class="line">               getExecutor().execute(<span class="keyword">new</span> <span class="title class_">Thread</span>() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                       sipWakeLock.acquire(<span class="built_in">this</span>);</span><br><span class="line">                       <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_IMAGE.equals(mimeType)) &#123;</span><br><span class="line">                           <span class="type">MessageBean</span> <span class="variable">imageMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageMessageBean</span>(message, filePath, data, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                           imageMessageBean.sendMessage();</span><br><span class="line">                       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_AUDIO.equals(mimeType)) &#123;</span><br><span class="line">                           <span class="type">MessageBean</span> <span class="variable">audioMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AudioMessageBean</span>(message, filePath, data, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                           audioMessageBean.sendMessage();</span><br><span class="line">                       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_VEDIO.equals(mimeType)) &#123;</span><br><span class="line">                           <span class="type">MessageBean</span> <span class="variable">videoMessage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">VideoMessageBean</span>(message, filePath, data, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">                           videoMessage.sendMessage();</span><br><span class="line">                       &#125;</span><br><span class="line"></span><br><span class="line">                       sipWakeLock.release(<span class="built_in">this</span>);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h1 id="5-判断是什么消息类型-封装不同的消息类型，以图片消息为例-MESSAGE-TYPE-IMAGE"><a href="#5-判断是什么消息类型-封装不同的消息类型，以图片消息为例-MESSAGE-TYPE-IMAGE" class="headerlink" title="5.判断是什么消息类型 封装不同的消息类型，以图片消息为例(MESSAGE_TYPE_IMAGE)"></a>5.判断是什么消息类型 封装不同的消息类型，以图片消息为例(MESSAGE_TYPE_IMAGE)</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_IMAGE.equals(mimeType)) &#123;</span><br><span class="line"> <span class="type">MessageBean</span> <span class="variable">imageMessageBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageMessageBean</span>(message, filePath, data, accountId, pjService, callee, SipService.<span class="built_in">this</span>);</span><br><span class="line">  imageMessageBean.sendMessage();</span><br><span class="line">                       &#125;</span><br></pre></td></tr></table></figure><h1 id="5-1-ImageMessageBean"><a href="#5-1-ImageMessageBean" class="headerlink" title="5.1 ImageMessageBean"></a>5.1 ImageMessageBean</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图片类型消息封装</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> accountId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pjSipService</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> callee</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ImageMessageBean</span><span class="params">(String message, String filePath, <span class="type">int</span> data, <span class="type">long</span> accountId, PjSipService pjSipService, String callee, Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(message, accountId, pjSipService, callee, context);</span><br><span class="line">        <span class="built_in">this</span>.data = data == -<span class="number">100</span> ? <span class="number">0</span> : data;</span><br><span class="line">        <span class="comment">// normal message,just use the text as content</span></span><br><span class="line">        finalMessageContent = strurl.toString();</span><br><span class="line">        dbMessageBody = finalMessageContent;</span><br><span class="line">        <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_IMAGE.equals(getMessageMimeType())) &#123;</span><br><span class="line">            <span class="comment">// get the image file path after zooming 拿到图片大小</span></span><br><span class="line">            finalFilePath = data == -<span class="number">100</span> ? HttpMessageUtils.copyImage(filePath) : HttpMessageUtils.getScaledImagePath(filePath);</span><br><span class="line">            <span class="comment">// move to folder of callee 移动到接收者所在的目录</span></span><br><span class="line">            FileUtils.<span class="type">FileInfo</span> <span class="variable">fileInfo</span> <span class="operator">=</span> FileUtils.getFileInfo(finalFilePath);</span><br><span class="line">            <span class="keyword">if</span> (fileInfo != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">finalFolder</span> <span class="operator">=</span> CustomDistribution.getImageFolder()</span><br><span class="line">                        + File.separator + SipUri</span><br><span class="line">                        .getUserName(callee);</span><br><span class="line">                <span class="type">String</span> <span class="variable">finalFileName</span> <span class="operator">=</span> fileInfo.fileName</span><br><span class="line">                        + SipMessage.MESSAGE_IMAGE_SUFFIX;</span><br><span class="line">                <span class="keyword">if</span> (FileUtils.renameFile(finalFilePath, finalFolder,</span><br><span class="line">                        finalFileName)) &#123;</span><br><span class="line">                    finalFilePath = finalFolder + File.separator</span><br><span class="line">                            + finalFileName;</span><br><span class="line">                    uploadFilePath = HttpMessageUtils</span><br><span class="line">                            .generateTmpPath(SipMessage.SAVE_IMAGE_SUFFIX);</span><br><span class="line">                    FileUtils.copyFile(finalFilePath, uploadFilePath);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="5-2-imageMessageBean-sendMessage"><a href="#5-2-imageMessageBean-sendMessage" class="headerlink" title="5.2 imageMessageBean.sendMessage();"></a>5.2 imageMessageBean.sendMessage();</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 发送消息</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMessage</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="comment">// 生成hashCode</span></span><br><span class="line">      hashCode = getHashCode();</span><br><span class="line">      <span class="keyword">if</span> (toCall != <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="comment">//          拿到要发送的消息</span></span><br><span class="line">          <span class="type">SipMessage</span> <span class="variable">sipMessage</span> <span class="operator">=</span> getSipMessage();</span><br><span class="line">          <span class="keyword">if</span> (needInsertToDb &amp;&amp; !TextUtils.isEmpty(getDbMessageBody())) &#123;</span><br><span class="line"><span class="comment">//              插入到数据库</span></span><br><span class="line">              <span class="type">Uri</span> <span class="variable">uri</span> <span class="operator">=</span> HttpMessageUtils.insertMessage(context, sipMessage, <span class="literal">false</span>);</span><br><span class="line">              prepareForSend(uri);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">              Log.e(THIS_FILE, <span class="string">&quot;abort to send text message to &quot;</span> + toCall + <span class="string">&quot;as flag == false&quot;</span>);</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">              <span class="keyword">if</span> (toCall.isPjsipAccountValid() &amp;&amp; PreferencesWrapper.getInstance(MyApplication.getApplication())</span><br><span class="line">                      .isValidConnectionForIncoming()) &#123;</span><br><span class="line"><span class="comment">//                  发送消息</span></span><br><span class="line">                  pjSipService.sendMessage(toCall, getSendMessageBody(), sipMessage.getX_msgid(), getMessageMimeType(), hashCode);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125; <span class="keyword">catch</span> (SipService.SameThreadException e) &#123;</span><br><span class="line">              e.printStackTrace();</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          Log.e(THIS_FILE, <span class="string">&quot;failed to send text message to &quot;</span> + toCall);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="6-使用SIPServer发送消息-（Send-sms-x2F-message-using-SIP-server）"><a href="#6-使用SIPServer发送消息-（Send-sms-x2F-message-using-SIP-server）" class="headerlink" title="6.使用SIPServer发送消息 （Send sms&#x2F;message using SIP server）"></a>6.使用SIPServer发送消息 （Send sms&#x2F;message using SIP server）</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Send sms/message using SIP server</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// modified by txp,2014-10-28</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">sendMessage</span><span class="params">(ToCall callee, String message, String x_msgid, String mimeType, <span class="type">long</span> currentTimeMillis)</span></span><br><span class="line">            <span class="keyword">throws</span> SameThreadException &#123;</span><br><span class="line">        <span class="keyword">if</span> (!created) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (callee != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> SipMain.sendMessage(callee.getCallee(), x_msgid, mimeType, message, currentTimeMillis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="7-SipMain发送消息"><a href="#7-SipMain发送消息" class="headerlink" title="7.SipMain发送消息"></a>7.SipMain发送消息</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">sendMessage</span><span class="params">(<span class="keyword">final</span> String uri, String x_msgid, <span class="keyword">final</span> String mimeType, <span class="keyword">final</span> String content, <span class="keyword">final</span> <span class="type">long</span> currentTimeMillis)</span> &#123;</span><br><span class="line">       LogUtils.e(<span class="string">&quot;%s,%s,%s,%s&quot;</span>, uri, x_msgid, mimeType, content, currentTimeMillis);</span><br><span class="line">       <span class="keyword">return</span> SipMessenger.getMessenger().sendMessage(uri, x_msgid, mimeType, content, currentTimeMillis);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h1 id="8-SipMessenger发送消息"><a href="#8-SipMessenger发送消息" class="headerlink" title="8.SipMessenger发送消息"></a>8.SipMessenger发送消息</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">sendMessage</span><span class="params">(<span class="keyword">final</span> String uri, <span class="keyword">final</span> String x_msgid, <span class="keyword">final</span> String mimeType, <span class="keyword">final</span> String content, <span class="keyword">final</span> <span class="type">long</span> currentTimeMillis)</span> &#123;</span><br><span class="line"><span class="comment">//       获取当前登录的用户</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">SipAccount</span> <span class="variable">account</span> <span class="operator">=</span> SipAccountMgr.getInstance().getCurrentAccount();</span><br><span class="line">        <span class="keyword">if</span> (account != <span class="literal">null</span> &amp;&amp; SipUri.validSipUri(uri)</span><br><span class="line">                &amp;&amp; !TextUtils.isEmpty(mimeType) &amp;&amp; !TextUtils.isEmpty(content)) &#123;</span><br><span class="line">            SipMain.getInstance().runOnMainThread(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//                    切换到主线程里去发消息</span></span><br><span class="line">                    sendMessage(account, x_msgid, uri, mimeType, content, currentTimeMillis);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            LogUtils.d(<span class="string">&quot;send params not valid. uri:&quot;</span> + uri + <span class="string">&quot; mimeType:&quot;</span> + mimeType + <span class="string">&quot; content:&quot;</span> + content);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="9-真正调用sip发送消息的函数"><a href="#9-真正调用sip发送消息的函数" class="headerlink" title="9. 真正调用sip发送消息的函数"></a>9. 真正调用sip发送消息的函数</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SuppressLint(&quot;HardwareIds&quot;)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">sendMessage</span><span class="params">(SipAccount account, String x_msgid, String sipUri, String mimeType, String content, <span class="type">long</span> currentTimeMillis)</span> &#123;</span><br><span class="line">    <span class="type">Buddy</span> <span class="variable">buddy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Buddy</span>();</span><br><span class="line">    <span class="type">BuddyConfig</span> <span class="variable">buddyConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BuddyConfig</span>();</span><br><span class="line">    <span class="type">SendInstantMessageParam</span> <span class="variable">param</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SendInstantMessageParam</span>();</span><br><span class="line">    content = SipEncryptor.encode(content);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        buddyConfig.setUri(sipUri);</span><br><span class="line">        buddy.create(account, buddyConfig);</span><br><span class="line">        param.setContentType(mimeType);</span><br><span class="line">        param.setContent(content);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (SipMessage.MESSAGE_TYPE_CANCEL.equals(mimeType)) &#123;</span><br><span class="line">            MyApplication.getApplication().addCancelHashcode(currentTimeMillis);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//用来唯一标识这条发送的消息</span></span><br><span class="line">        <span class="type">SWIGTYPE_p_void</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SwigtypePVoidWrapper</span>((<span class="type">int</span>) currentTimeMillis, <span class="literal">true</span>);</span><br><span class="line">        param.setUserData(a);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *  2分钟内撤回消息增加</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        param.getTxOption().setMsgBody((<span class="type">int</span>) currentTimeMillis + <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="type">SipTxOption</span> <span class="variable">txOption</span> <span class="operator">=</span> param.getTxOption();</span><br><span class="line">        <span class="type">SipHeaderVector</span> <span class="variable">headerVector</span> <span class="operator">=</span> txOption.getHeaders();</span><br><span class="line">        <span class="type">SipHeader</span> <span class="variable">sipHeader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SipHeader</span>();</span><br><span class="line">        sipHeader.setHName(SipMessage.X_MSGID);</span><br><span class="line">        sipHeader.setHValue(x_msgid);</span><br><span class="line">        headerVector.add(sipHeader);</span><br><span class="line">        txOption.setHeaders(headerVector);</span><br><span class="line">        param.setTxOption(txOption);</span><br><span class="line">        buddy.sendInstantMessage(param);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">        LogUtils.e(<span class="string">&quot;send Message failed.&quot;</span> + e);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        param.delete();</span><br><span class="line">        buddy.delete();</span><br><span class="line">        buddyConfig.delete();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-最底层发送消息的函数"><a href="#10-最底层发送消息的函数" class="headerlink" title="10.最底层发送消息的函数"></a>10.最底层发送消息的函数</h1><p class="code-caption" data-lang="java" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span><a class="code-caption-copy"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendInstantMessage</span><span class="params">(SendInstantMessageParam prm)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    pjsua2JNI.Buddy_sendInstantMessage(<span class="built_in">this</span>.swigCPtr, <span class="built_in">this</span>, SendInstantMessageParam.getCPtr(prm), prm);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>1.SIP登录模块整理</title>
      <link href="/xiaoalei.github.io/2022/04/02/1.SIP%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E6%95%B4%E7%90%86/"/>
      <url>/xiaoalei.github.io/2022/04/02/1.SIP%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Sip登录相关问题"><a href="#Sip登录相关问题" class="headerlink" title="Sip登录相关问题"></a>Sip登录相关问题</h1><h4 id="1-登录流程"><a href="#1-登录流程" class="headerlink" title="1.登录流程"></a>1.登录流程</h4><p><img src="/xiaoalei.github.io/images/sip_login.png"></p><h4 id="2-登录、注销"><a href="#2-登录、注销" class="headerlink" title="2.登录、注销"></a>2.登录、注销</h4><p><img src="/xiaoalei.github.io/images/login_unlogin1.png"><br><img src="/xiaoalei.github.io/images/login_unlogin2.png"></p><h4 id="3-登录状态"><a href="#3-登录状态" class="headerlink" title="3.登录状态"></a>3.登录状态</h4><p><img src="/xiaoalei.github.io/images/login_status.png"></p><h4 id="4-注销登录"><a href="#4-注销登录" class="headerlink" title="4.注销登录"></a>4.注销登录</h4><p><img src="/xiaoalei.github.io/images/login_unlogin.png"></p><h4 id="5-网络切换"><a href="#5-网络切换" class="headerlink" title="5.网络切换"></a>5.网络切换</h4><p><img src="/xiaoalei.github.io/images/network_change.png"></p><h4 id="6-杀掉后再打开"><a href="#6-杀掉后再打开" class="headerlink" title="6.杀掉后再打开"></a>6.杀掉后再打开</h4><p><img src="/xiaoalei.github.io/images/kill_and_open.png"></p><h4 id="7-放到后台再打开"><a href="#7-放到后台再打开" class="headerlink" title="7.放到后台再打开"></a>7.放到后台再打开</h4><p><img src="/xiaoalei.github.io/images/background_opne.png"></p><h4 id="8-sip心跳机制"><a href="#8-sip心跳机制" class="headerlink" title="8.sip心跳机制"></a>8.sip心跳机制</h4><p><img src="/xiaoalei.github.io/images/sip_beat.png"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
